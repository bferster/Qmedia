<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="qlogo.ico">
	<title>Qmedia</title>
 	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>	
	<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css" />
	<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
   	<script type="text/javascript" src="http://html5video.org/kaltura-player/mwEmbedLoader.php"></script>

	<style type="text/css">
		body { 			font-family:Verdana,Geneva,sans-serif; font-size:xx-small; }
		.rounded-corners { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		tr.odd { 		background-color:#e0e0e0; }
		.ui-autocomplete { max-height: 300px; overflow-y: auto; }
	
 		.unselectable { -moz-user-select: none;     -khtml-user-select: none;
		   			 	-webkit-user-select: none;  -ms-user-select: none;   user-select: none;
		   				}
		.title { 		font-family:Verdana,Geneva,sans-serif; font-size:x-large;color:#fff;
						padding:8px;margin:0px;font-weight:bold;
						-moz-border-radius:4px;-webkit-border-radius:4px;-khtml-border-radius:4px;border-radius:4px;
						background-color:#ccc;
					  	}
		.contents { 	font-family:Verdana,Geneva,sans-serif; font-size:small; 
						padding:0px; margin:0px;padding-right:16px;
						} 
		.trans { 		font-family:Verdana,Geneva,sans-serif; font-size:small;
						margin:0px; padding:0px;padding-right:8px;padding-left:16px;
						overflow:hidden;
						cursor:pointer;
						}
		.slide { 		overflow:hidden;
						}
		.control { 		padding:4px;margin:0px;margin-top:6px;margin-bottom:6px;
						-moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;
						background-color:#ccc;
						} 
		.info { 		font-family:Verdana,Geneva,sans-serif; font-size:small;
						margin:0px; padding:0px;
						overflow:hidden;
						}
		.labels { 		font-family:Verdana,Geneva,sans-serif; font-size:medium;
						color:#999;font-weight:bold;
						}
		.timeDisp { 	font-family:Verdana,Geneva,sans-serif; font-size:xx-small;
						color:#666;width:100px;display:inline-block;text-align:center;
						}

 	</style>
</head>
<body>
<div id="showDiv" style="padding:0px;margin:0px;display:none">
	<div id="titleDiv" style="position:absolute;" class="title unselectable"></div>
	<div id="playerDiv" style="position:absolute" class="unselectable"></div>
	<div id="slideDiv" style="position:absolute" class="slide unselectable"></div>
	<div id="controlDiv" style="position:absolute" class="control unselectable">
	  	<img id="playBut" src="images/playbut.gif" onclick="RunPlayer('play')" title="Play video" style="vertical-align:-4px;cursor:pointer">
   		<div id="timeDisp" class="timeDisp unselectable"></div>
   		<div style="display:inline-block" id="slider"></div>&nbsp;&nbsp;
   		<img src="images/settingsbut.gif" id="settings" title="Settings menu" style="vertical-align:-2px;cursor:pointer"><span style="vertical-align:1px">&nbsp;&nbsp;</span>
  		<img src="images/startdot.gif" onclick="RunSlide('last')" title="Go to previous slide" style="vertical-align:-2px;cursor:pointer"><span style="vertical-align:1px">&nbsp;&nbsp;|&nbsp;</span>
   		<img src="images/enddot.gif" onclick="RunSlide('next')" title="Go to next slide" style="vertical-align:-2px;cursor:pointer">
	</div>
	<div id="playerSiz" style="position:absolute;width:8px;cursor:col-resize" class="unselectable" title="Resize player">
		<div style="position:absolute;width:80px;height:100%;left:-40px" class="unselectable"></div>
	</div>
	<div id="contentDiv" style="position:absolute" class="contents unselectable">
		<span class="labels">Contents</span><div id="contentsText" style="height:100%;overflow:auto;margin-top:16px"></div>
	</div>
	<div id="transDiv" style="position:absolute" class="trans">
		<span class="labels">Transcript</span>
		<div id="transSearchDiv" style='position:absolute;top:0px;white-space:nowrap'> 
			<input style='width:100px;font-size:small;border:1px solid #ddd' id='transSearch'>
  			<img src="images/settingsbut.gif" id="transSettings" title="Transcript menu" style="vertical-align:-2px;cursor:pointer">
	  	</div>
  		<div id="transcriptText" style="height:90%;overflow:auto;margin-top:16px;padding-right:8px"></div>
 	</div>
	<div id="infoDiv" style="position:absolute" class="info">
		<span class="labels">More information</span><div id="informationText" style="height:100%;overflow:hidden;margin-top:16px"></div>
	</div>
	<div id="transHgt" style="position:absolute;width:1000px;height:16px;cursor:row-resize;border-bottom:3px solid #ccc" class="unselectable" title="Change transcript height">
			<br><br><br>
			Click <a href="//docs.google.com/presentation/d/18LLvvy3rMbRexOj_UmPI3JBhcymq5Ok1w7swoKeb50c/pub" target="_blank"> here </a> for a short slide show about Qmedia
	</div>
	<div id="transSiz" style="position:absolute;width:8px;cursor:col-resize" class="unselectable" title="Resize transcript">
		<div style="position:absolute;width:80px;height:100%;top:32pxleft:-40px" class="unselectable"></div>
	</div>
	<div id="cache0" style="display:none"></div><div id="cache1" style="display:none"></div><div id="cache2" style="display:none"></div><div id="cache3" style="display:none"></div>
</div>
 
<script>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GLOBALS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	var sd=null;																// Holds show data
	var showPanes=4;															// Number of panes in show
	var playerPane=0;															// Pane number of player
	var slidePane=1;															// Pane number of slides
	var transPane=2;															// Pane number of transcript
	var infoPane=3;																// Pane number of info area
	var showVectors=new Array();												// Timing vectors
	var showCurSource=new Array();												// Current sources
	var paneAnimationTimer=null;												// Times pane animations
	var player=null;															// Holds player object
	var playerNow=0;															// Current time in secs
	var playerTime=null;														// Timer
	var playerMode="empty";														// State of player
	var playerType="";															// Type of player
	var	playerCurTime=0;														// Current time
	var	playerTRT=0;															// Total running time
	var playerHgt=0,playerWid=0;												// Source height/width
	var playerAspect=.5625;														// Player aspect ratio
		

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// INIT
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	$(document).ready(function() {												// When loaded
		var i;
		if (window.addEventListener) 											// If supported this way
			window.addEventListener("message",shivaEventHandler,false);			// Add event handler
		else																	// Use other method
			window.attachEvent("message",shivaEventHandler);					// Add handler
		
		for (i=0;i<showPanes;++i) {												// For each show pane
			showVectors[i]=[];													// Create timing vector arrays 
			showCurSource[i]="";												// No source yet
			}
		LoadContent(sd);														// Load show content
	
		$("#slider").slider({ value:playerNow, max:sd.playerStop,				// Init slider
			slide: function(event,ui ) {										// Handle change
				RunPlayer("scrub",ui.value);									// Show
				}
			});

		$("#playerSiz").draggable({												// DRAG PLAYER WIDTH HANDLER
			cursorAt:{left:16},													// Cursor offext
			cursor: "col-resize", axis:"x",										// X-only
			stop: ResizePanes,													// Resize panes when done
			drag: function(event, ui) {											// On drag
				var wid=Math.min($("body").width(),sd.width);					// Cap at screen size
			 	sd.playerSlideRatio=Math.max(0,Math.min(1,(event.clientX-8)/(wid+16)));	// Set ratio between windows
				ResizePanes();													// Resize panes
				}
			});
			
		$("#transHgt").draggable({												// DRAG TRANSCRIPT HEIGHT HANDLER		
			cursor: "row-resize", axis:"y",										// Y-only
			stop: ResizePanes,													// Resize panes when done
			drag: function(event, ui) {											// On drag
				sd.transHgt=Math.max(event.clientY-$("#controlDiv").css("top").replace(/px/,"")*1-$("#controlDiv").height(),0)-32;  // Set hgt
				ResizePanes();													// Resize panes
				}
			});

		$("#playerSiz").hover(													// Player width
			function(){ $(this).css("background-color","#acc3db")},				// Highlight
			function(){ $(this).css("background-color","transparent")			// Hide
		});

		$("#settings").on("click", function(e) {								// SETTINGS HANDLER
			if ($("#setpopup").length) {										// If open
				$("#setpopup").hide('slide',{direction:'down'},300, function(){ $("#setpopup").remove() });	// Hide, then remove it
				return;															// Quit
				}
			var w=190;
			var x=$("#controlDiv").width()-w-12;
			var str="<table><tr height='18'><td>Volume</td>";
			str+="<td><div style='display:inline-block;width:100px' id='pVolume'></div></td></tr>"
			str+="<tr height='18'><td>Speed</td>";
			str+="<td><div style='display:inline-block;width:100px' id='pSpeed'></div></td></tr>"
			str+="<tr height='18'><td>Quality</td><td>";
			str+=MakeSelect("pQuality",false,["Default","Good","Better","Best"],sd.playerQuality,"style='font-size:x-small'")+"</td></tr>";
			str+="</table>";
			$("body").append("<div id='setpopup' style='display:none;position:absolute;width:"+w+"px;height:auto;background-color:#f8f8f8;left:"+x+"px;top:"+y+"px;border:1px solid #ccc;padding:8px' class='rousnded-corners'>"+str+"</div>");
			var y=$("#controlDiv").css("top").replace(/px/,"")-$("#setpopup").height()-11;			
			$("#setpopup").css("top",y);										// Position above control bat
			$("#setpopup").show('slide',{direction:'down'},300);				// Show it
			
			$("#pVolume").slider({ value:sd.playerVolume,						// VOLUME HANDLER 
				change: function(event, ui) {									// On change
					sd.playerVolume=ui.value;									// Set param
					RunPlayer("volume",sd.playerVolume);						// Do it
					}
				});

			$("#pSpeed").slider({ value:sd.playerSpeed,step:25,					// SPEED CHANGE
				change: function(event, ui) {									// On change
					sd.playerSpeed=ui.value;									// Set param
					RunPlayer("speed",sd.playerSpeed);							// Do it
					}
				});
	
			$("#pQuality").on("change", function(e) {							// VIDEO QUALITY HANDLER
				sd.playerQuality=$("#pQuality").val();							// Set param
				RunPlayer("quality",sd.playerQuality);							// Do it
				});

			});																	// End settings
		
		RunPlayer("scrub",0);													// Show start/end times
		ResizePanes();															// Resize panes
		$("#showDiv").show(1000);												// Show interface
		playerTimer=setInterval(OnPlayerTimer,200);								// Set timer ~5ps

	});

	function LoadContent(show)												// LOAD SHOW CONTENT
	{
		$("#playerDiv").html("<img width='100%' src='video.jpg'onload='ResizePanes()'>");
		MakeVectors(1,show.slideVectors);										// Make slides timing list
		MakeVectors(2,show.transVectors);										// Make transcript timing list
		MakeVectors(3,show.infoVectors);										// Make info timing list
		$("#titleDiv").html(show.title);										// Set title
		MakeTOC(show.toc);														// Fill TOC contents
		MakeTranscript();														// Load transcript
		var tag=document.createElement('script');								// Create script
		if (show.playerSource.match(/kaltura/i)) {								// If Kaltura 
			playerType="kaltura";												// Set type
			RunPlayer("init");
			}
		else if (show.playerSource.match(/\/\//i)) {							// If HTML5
			playerType="html5";													// Set type
			RunPlayer("init");
			}
		else if (!isNaN(show.playerSource)) {									// If Vimeo
			playerType="vimeo";													// Set type
			RunPlayer("init");
			}
		else{																	// If YouTube
			playerType="youtube";												// Set type
			var tag=document.createElement('script');							// Create script
			tag.src="//www.youtube.com/iframe_api";								// Set api url
			var firstScriptTag=document.getElementsByTagName('script')[0];		// Find 1st script
			firstScriptTag.parentNode.insertBefore(tag,firstScriptTag);			// Load
			}
	}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PANES
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	function ShowContent(pane, div)											// SHOW IMAGE OR IFRAME
	{
		var i,o,oo,extra="scrolling='no'";
		var n=showVectors[pane].length-1;										// Last vector
		for (i=n;i>=0;i--) {													// For each vector
			o=showVectors[pane][i];												// Point at slide
			if (playerNow >= o.ps) {											// In this one
				if (showCurSource[pane] != o.cs) {								// A new item
					if (o.cs.match(/\.png|.gif|\.jpg|\.jpeg/i))					// An image
						$("#"+div).html("<img width='100%' src='"+o.cs+"'>"); 	// Load as image
					else{														// An iframe
						$("#"+div+"IF").remove();								// Remove any existing iframes
						if ((o.c) && (o.c.match(/scroll/i))) 	extra="";		// Add scroll bars
						$("#"+div).html("<iframe id='"+div+"IF' frameborder='0' height='"+$("#"+div).height()+"' "+extra+" width='100%' src='"+o.cs+"'></iframe>");	// Load in iframe
						}
					if (o.d != undefined) 										// If changing ratios
						AnimatePanes(o.d,o.e,pane);								// Animate transition
					showCurSource[pane]=o.cs;									// Then is now
					oo=showVectors[pane][i+1];									// Point at next slide
					if (oo) {													// If not penulitimate image
						if (oo.cs.match(/\.png|.gif|\.jpg|\.jpeg/i))			// If an image				
							$("#cache"+pane).html("<img src='"+oo.cs+"'>"); 	// Load as image
						}
					}						
				break;															// Stop looking
				}																	
			}
	}

	function ResizePanes()													// RESIZE PANES
	{ 
		var wid=Math.min($("body").width(),sd.width);							// Cap at screen size
		$("#showDiv").width(wid);												// Set show width
		$("#titleDiv").width(wid-16);											// Set title width
		var w=wid*sd.playerSlideRatio-4;										// Player width
		var w2=wid-w-8;															// Slide width
		if (w <= 0)				w=0,w2=wid;										// Full slide											
		else if (w2 <= 0)		w2=0,w=wid;										// Full video											
		var pt=$("#titleDiv").height()+32;										// Top of player
		$("#playerDiv").css({ width:w+"px",top:pt+"px"});						// Set player pos
		$("#slideDiv").css({ left:(wid-w2+8)+"px",width:(w2)+"px",top:pt+"px"}); // Set slider pos/size
		var h=Math.max($("#playerDiv").height(),$("#slideDiv").height());		// Player height
		$("#playerSiz").css({ left:(w+8)+"px",height:h+"px",top:pt+"px"});		// Set sizer pos
		h+=pt;																	// Point at top of control bar
		var ct=h+$("#controlDiv").height()+24;									// Contents top
		$("#contentDiv").css({ top:ct+"px",height:sd.transHgt+"px"});			// Position/size contents
		var cw=$("#contentDiv").width()+8;										// Get width of content panel
		$("#controlDiv").css({ top:h+"px" });									// Position control slider
		$("#slider").width(wid-210);											// Slider width
		w=wid*sd.transInfoRatio;												// Transcript width
		$("#transDiv").css({ left:cw+"px",width:(w-cw-8)+"px",height:sd.transHgt+"px",top:ct+"px"});
		$("#transSiz").css({ left:(w+4)+"px",height:sd.transHgt+"px",top:(ct)+"px"});// Pos transcript sizer
		w=wid*(1-sd.transInfoRatio)-8;											// Info window width
		$("#infoDiv").css({ left:(wid-w+8)+"px",width:Math.max(w,0)+"px",height:sd.transHgt+"px",top:ct+"px"});
		$("#transHgt").css({ top:ct+sd.transHgt+"px"});							// Set transcript height
		$("#transSearchDiv").css("left",$("#transDiv").width()-104)+"px";		// Search div width
		RunPlayer("resize");													// Resize player
		RunSlide("resize");														// Resize slides
		RunInfo("resize");														// Resize info
		}		

	function AnimatePanes(end, dur, which)									// ANIMATE CHANGE OF PANE RATIO
	{
		var start;
		if (which == slidePane) 	 start=sd.playerSlideRatio;					// Get current player ratio
		else if (which == infoPane)  start=sd.transInfoRatio;					// Get current transcript ratio
		if ((Math.abs(end-start) < .1) || (paneAnimationTimer))					// Already there
			return;																// Quit
		clearInterval(paneAnimationTimer);										// Kill timer
		var startTime=new Date().getTime();										// Set start
		if (dur == undefined)													// If no duration set
			dur=.5;																// Set default
		dur=dur*1000;															// Secs to ms
		paneAnimationTimer=setInterval(onAnimate,24);							// Set timer ~40ps

		function onAnimate() {
			var now=(new Date().getTime()-startTime)/dur;						// Get now
			now=1.0-((Math.cos(3.1414*now)+1)/2.0);								// Full cosine curve
			now=Math.min(now,1);												// Cap
			var pos=start+(end-start)*now;										// Get val
			if (now > .99)	{													// If done
				clearInterval(paneAnimationTimer);								// Kill timer
				pos=end;														// Force to end
				paneAnimationTimer=null;										// Null it out
				}
			if (which == slidePane) 	 	sd.playerSlideRatio=pos;			// Set player ratio
			else if (which == infoPane) 	sd.transInfoRatio=pos;				// Set transcript ratio
			ResizePanes();														// Resize
					
			}
	}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TRANSCRIPT
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	function GetCharPosTimeFrom(t)											// GET CHARPOS IN TRANSCRIPT FROM TIME
	{
		var i,o,cp={};
		var n=showVectors[transPane].length-1;									// Last vector
		for (i=n;i>=0;i--) {													// For each vector
			o=showVectors[transPane][i];										// Point at vector
			if (t >= o.ps) {													// In this one
				cp.pos=(t-o.ps)/o.pd*o.cd+o.cs;									// Get char pos
				cp.pos2=cp.pos+o.c;												// End
				cp.pct=cp.pos/sd.transText.length;								// Percentage
				return cp;														// Return pos
				}																// Ratio into				
			}
		return { pos:0,pos2:0,line:0 };											// Not found
	}
	
	function GetTimeFromCharPos(p)											// GET TIME FROM CHARPOS IN TRANSCRIPT
	{
		var i,o,t;
		var n=showVectors[transPane].length-1;									// Last vector
		for (i=n;i>=0;i--) {													// For each vector
			o=showVectors[transPane][i];										// Point at vector
			if (p >= o.cs) {													// In this one
				t=(p-o.cs)/o.cd*o.pd+o.ps;										// Get time
				return t;														// Return time
				}
			}
		return 0;																// Not found
	}
	
	function HighlightText(start, end)										// HGHLIGHT SELECTED CHARS
	{
		var tran=sd.transText;													// Copy original
		if (start != end) {														// If something to highlight
			var str=tran.substring(0,start);									// Pre highlight
			str+="<span style='color:#009900'>";								// Add style
			str+=tran.substring(start,end);										// Highlight portion
			str+="</span>";														// End style
			str+=tran.substring(end);											// Add end
			tran=str;															// Copy
			}
		$("#transcriptText").html(tran.replace(/\n/g,"<br>"));					// Set text
	}

	function MakeTOC(toc)
	{
		var i,t;
		if (!toc) {																// No toc
			$("#contentDiv").css("display","none");								// Hide it
			$("#contentDiv").width(0);											// Squeeze
			return;																// Quit
			}
		var str="<div style='cursor:pointer;padding-left:12px'>"				// Set up
		for (i=0;i<toc.length;++i) {											// For each title
			t=TimecodeToSeconds(toc[i].start);									// Get time
			str+="<div onclick='RunPlayer(\"play\","+t+")'";					// Add handler						
			str+="title='"+toc[i].start+"'>";									// Add timecode tooltip
			str+="<span style='color:#aaa'><b>&bull; </b></span>"; 				// Add bullet
			str+=toc[i].title+"</div>";											// Add title
			}
		$("#contentsText").html(str+"</div>");									// Set div contents
	}

	function MakeTranscript()												// CREATE TRANSCRIPT
	{
		if (!sd.transText) {													// If no transcript
			sd.transInfoRatio=0;												// Slide over
			$("#transDiv").css("display","none");								// Hide it
			$("#transSiz").css("display","none");								// Hide it
			return;																// Quit
			} 
		sd.transText=sd.transText.replace(/\r/g,"");							// Remove CRS
		$("#transcriptText").html(sd.transText);								// Fill div
		var words=sd.transText.split(" ");										// Get words
		var i,l,n=words.length;p=0;														
		for (i=0;i<n;++i) {														// For each word	
			l=words[i].length;													// Get word length
			words[i]={ label:words[i],pos:p };									// Make into label index object
			p+=l+1;																// Start of next word
			}
		
		$("#transSearch").autocomplete({ source: words, 						// AUTOCOMPLETE HANDLER
			select: function(event, ui) {										// On select
				RunPlayer("scrub",GetTimeFromCharPos(ui.item.pos));				// Show
				}
			});
		
		$("#transcriptText").on("click", function (e) {							// HANDLE TRANSCRIPT CLICK
	  		var s=window.getSelection();										// Get selection
 			var y=sd.transText.indexOf(s.focusNode.textContent);				// Char pos of paragraph
	 		y=y+s.anchorOffset;													// Position in text
 			RunPlayer("scrub",GetTimeFromCharPos(y),true);						// Show
 			});

		$("#transHgt").hover(													// If over transcript height control
			function(){ $(this).css("background-color","#acc3db")},				// Highlight
			function(){ $(this).css("background-color","transparent")			// Hide
			});
		
		$("#transSiz").hover(													// Transcript width
			function(){ $(this).css("background-color","#acc3db")},				// Highlight
			function(){ $(this).css("background-color","transparent")			// Hide
			});

		$("#transSiz").draggable({												// DRAG TRANSCRIPT WIDTH HANDLER
			cursorAt:{left:0},													// Cursor offext
			cursor: "col-resize", axis:"x",										// X-only
			stop: ResizePanes,													// Resize panes when done
			drag: function(event, ui) {											// On drag
				var wid=Math.min($("body").width(),sd.width);					// Cap at screen size
			 	sd.transInfoRatio=Math.max(0,Math.min(1,(event.clientX)/wid));	// Set ratio between windows
				ResizePanes();													// Resize panes
				}
			});
		
		$("#transSettings").on("click", function(e) {							// TRANSCRIPT SETTINGS HANDLER
			if ($("#setpopup").length) {										// If open
				$("#setpopup").hide('slide',{direction:'right'},300, function(){ $("#setpopup").remove() });	// Hide, then remove it
				return;															// Quit
				}
			var w=190;
			var x=$("#transSearchDiv").css("left").replace(/px/,"")-0+80;
			var str="<table><tr height='18'><td>Language</td><td>";
			str+=MakeSelect("tLang",false,sd.transLangs.split("|"),sd.transLanguage,"style='font-size:x-small'")+"</td></tr>";
			str+="</table>";
			$("body").append("<div id='setpopup' style='display:none;position:absolute;width:"+w+"px;height:auto;background-color:#f8f8f8;left:"+x+"px;top:"+y+"px;border:1px solid #ccc;padding:8px' class='rousnded-corners'>"+str+"</div>");
			var y=$("#controlDiv").css("top").replace(/px/,"")-0+24+$("#controlDiv").height();			
			$("#setpopup").css("top",y);										// Position above control bat
			$("#setpopup").show('slide',{direction:'right'},300);				// Show it

			$("#tLang").on("change", function(e) {								// LANGUAGE HANDLER
				sd.transLanguage=$("#tLang").val();								// Set param
				RunTranscript("language",sd.transLanguage);						// Do it
				});

			});																	// End transcript settings
	}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EVENTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


    function onYouTubeIframeAPIReady() 										// YOUTUBE PLAYER READY
    {   
		RunPlayer("init");														// Init player								
 	}

	function OnPlayerTimer()												// GET TIME FROM CHARPOS IN TRANSCRIPT
	{
		if ((!player) || (playerMode != "play"))								// Not playing
			return;																// Quit
		if (playerType == "youtube") 											// If YouTube
			playerCurTime=player.getCurrentTime();								// Get cur time
		else if (playerType == "html5") 										// If  HTML5
			playerCurTime=player.currentTime;									// Get cur time
		if (playerCurTime >= sd.playerStop)										// Past end
			RunPlayer("pause");													// Pause
		playerNow=Math.min(playerCurTime,sd.playerStop);						// Get capped time
		RunPlayer("show");														// Show status
	}

	function shivaEventHandler(e)											// ON SHIVA EVENT
	{
		if (e.origin.match(/vimeo/i)) {											// From vimeo
    		var ev=$.parseJSON(e.data);											// Parse json
  			if (ev.event == "playProgress") {									// If playing			
				playerCurTime=ev.data.seconds;									// Set current time
				}
			else if (ev.event == "play") {										// If play			
				$("#playBut").attr("src","images/pausebut.gif");				// Show pause but
				playerMode="play";												// Set mode
 				}
			else if ((ev.event == "pause") || (ev.event == "finish")) {			// If pause/end			
  				$("#playBut").attr("src","images/playbut.gif");					// Show play but
				playerMode="pause";												// Set mode
    			}
			else if (ev.method == "getDuration") {								// If duration	
   				playerTRT=ev.value;												// Get duration
 				}
 			else if (ev.method == "getVideoHeight") {							// If height	
 				playerHgt=ev.value;												// Set it
 				if (playerWid)													// If have both parts
 					playerAspect=playerHgt/playerWid;							// Calc asp		
				}
			else if (ev.method == "getVideoWidth") {							// If width	
 				playerWid=ev.value;												// Set it
 				if (playerHgt)													// If have both parts
 					playerAspect=playerHgt/playerWid;							// Calc asp		
				}
 			else if (ev.event == "ready"){										// If ready			
	 			var f=$("#vplayer");											// Point at iframe
				f[0].contentWindow.postMessage("{\"method\":\"addEventListener\",\"value\":\"play\"}","*");
				f[0].contentWindow.postMessage("{\"method\":\"addEventListener\",\"value\":\"pause\"}","*");
 				f[0].contentWindow.postMessage("{\"method\":\"addEventListener\",\"value\":\"playProgress\"}","*");
 				f[0].contentWindow.postMessage("{\"method\":\"getVideoHeight\"}","*");
 				f[0].contentWindow.postMessage("{\"method\":\"getVideoWidth\"}","*");
 				f[0].contentWindow.postMessage("{\"method\":\"getDuration\"}","*");
 				RunPlayer("ready");												// Show status
				}
		}	
	}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ACTIONS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	function RunPlayer(what, param, param2)									// PLAYER ACTIONS
	{
		var i,str;
		if (what == "play") {													// Play
			if ($("#playBut").attr("src") == "images/playbut.gif")	{			// If in pause
				$("#playBut").attr("src","images/pausebut.gif");				// Show pause but
				playerMode="play";												// Set mode
 				}
			else if (param == undefined) {										// Already in play, but not going to a time
				$("#playBut").attr("src","images/playbut.gif");					// Show play but
				playerMode="pause";												// Set mode
				}
			if (param != undefined) {											// If playing to a time
				if ((""+param).match(/:/))										// In tc format
					param=TimecodeToSeconds(param);								// Convert to secs
				playerCurTime=playerNow=Math.max(Math.min(param,sd.playerStop),0);	// Set cur time
				}	
			if (!player)	return;												// If no player yet, quit
			if (playerType == "youtube") {										// If YouTube
				player.seekTo(playerNow,true);									// Cue
				if (playerMode == "play")	player.playVideo();					// Play
				if (playerMode == "pause")	player.pauseVideo();				// Pause
				}
			else if (playerType == "kaltura") {									// If Kaltura
				player.sendNotification("seekTo",playerNow);					// Cue
				if (playerMode == "play")  	player.sendNotification("doPlay"); 	// Play
				if (playerMode == "pause")	player.sendNotification("doPause");	// Pause
				}
			else if (playerType == "vimeo") {									// If Vimeo
				player.contentWindow.postMessage("{\"method\":\"seekTo\",\"value\":\""+playerNow+"\"}","*");
				if (playerMode == "play")										// Play
					player.contentWindow.postMessage("{\"method\":\"play\"}","*");	// Send
				if (playerMode == "pause")										// Pause
					player.contentWindow.postMessage("{\"method\":\"pause\"}","*");	// Send
 				}
			else if (playerType == "html5") {									// If HTML5
				player.currentTime=playerNow;									// Cue
				if (playerMode == "play")  	player.play(); 						// Play
				if (playerMode == "pause")	player.pause();						// Pause
				}
			RunPlayer("show");													// Show where we're at
			}
		else if (what == "scrub") {												// Scrub
			playerCurTime=playerNow=Math.max(Math.min(param,sd.playerStop),0)	// Set now
			if (!player)	return;												// If no player yet, quit
			if (playerType == "youtube") 										// If YouTube
				player.seekTo(playerNow,true);									// Cue
			else if (playerType == "kaltura") 									// If Kaltura
				player.sendNotification("doSeek",playerNow);					// Cue			
			else if (playerType == "vimeo") 									// If Vimeo
				player.contentWindow.postMessage("{\"method\":\"seekTo\",\"value\":\""+playerNow+"\"}","*");
			else if (playerType == "html5") 									// If HTML5
				player.currentTime=playerNow;									// Cue
			RunPlayer("show",param2);											// Show where we're at
			}
		else if (what == "pause") {												// Pause
			$("#playBut").attr("src","images/playbut.gif");						// Show pause but
			playerMode="pause";													// Set mode
			if (!player)	return;												// If no player yet, quit
			if (playerType == "youtube") 										// If YouTube
				player.pauseVideo();											// Pause
			if (playerType == "kaltura") 										// If Kaltura
				player.sendNotification("doSeek",playerNow);					// Cue			
			else if (playerType == "vimeo") 									// If Vimeo
				player.contentWindow.postMessage("{\"method\":\"pause\"}","*");	// Send
 			else if (playerType == "html5") 									// If HTML5
				player.pause(); 												// Pause
			}
		else if (what == "show") {												// Scrub
			var str=SecondsToTimecode(playerNow)+" / ";							// Cur time
			str+=SecondsToTimecode(sd.playerStop);								// End time
			$("#timeDisp").text(str);											// Show now
			$("#slider").slider("value",playerNow);								// Set slider
			var max=$("#transcriptText")[0].scrollHeight;						// Max
			var cp=GetCharPosTimeFrom(playerNow);								// Get char pos in transcript
			if (!param)															// If not inhibiting scroll
				$("#transcriptText").scrollTop(cp.pct*max-$("#transcriptText").height()/4);	// Set scroll
			HighlightText(cp.pos,cp.pos2);										// Highlight area
			RunSlide("show");													// Show slide
			RunInfo("show");													// Show Info
			}
		else if (what == "quality") {											// Quality
		if (!player)	return;													// If no player yet, quit
			if (playerType == "youtube") {										// If YouTube
				var o={ Default:"default", Good:"small", Better:"medium", Best:"large"};	// Choices
				player.setPlaybackQuality(o[sd.playerQuality]);					// Set quality
				}
			}
		else if (what == "volume") {											// Volume
			if (!player)	return;												// If no player yet, quit
			if (playerType == "youtube") 										// If YouTube
				player.setVolume(sd.playerVolume);								// Set it
			else if (playerType == "vimeo") 									// If Vimeo
				player.contentWindow.postMessage("{\"method\":\"setVolume\",\"value\":\""+sd.playerVolume/100+"\"}","*"); // Send
			else if (playerType == "html5") 									// If HTML5
				player.volume=sd.playerVolume/100;								// Set
			else if (playerType == "kaltura") 									// If Kaltura
				player.sendNotification("changeVolume",sd.playerVolume);		// Set it			
			}
		else if (what == "speed") {												// Speed
			if (!player)	return;												// If no player yet, quit
			s=Math.max(.25,sd.playerSpeed/50);									// Speed set .25 to 2
			if (playerType == "youtube") 										// If initted YouTube
				player.setPlaybackRate(s);										// Set speed
			else if (playerType == "html5") 									// If HTML5
				player.playbackRate=s;											// Set speed
			}
		else if (what == "resize") {											// Resize
			if (!player)	return;												// If no player yet, quit
			var w=$("#playerDiv").width();										// Get width
			if (playerType == "youtube") 										// If initted YouTube
				player.setSize(w,w*playerAspect);								// Resize
			else if ((playerType == "vimeo") || (playerType == "html5")) {		// If Vimeo or HTML5
				$("#vplayer").width(w);											// Set width
				$("#vplayer").height(w*playerAspect);							// Set height
				}
			else if (playerType == "kaltura") 									// If Kaltura
		        $("#playerDiv").height($("#playerDiv").width()*playerAspect)+2;	// Set height
			}
		else if (what == "load") {												// Volume
			if (!player)	return;												// If no player yet, quit
			if (playerType == "youtube") 										// If YouTube
				player.loadVideoById(param);									// Load video
			}
		else if (what == "ready") {												// When ready
			RunPlayer("resize");												// Resize player
 			ResizePanes();														// Resize panes
			if (sd.playerAuto == "true")										// If autoplay
				RunPlayer("play",sd.playerStart);								// Play
			RunPlayer("show");													// Show
			}
		else if (what == "init") {												// Init player
			if (playerType == "youtube") {										// If YouTube
	       		player=new YT.Player("playerDiv", {								// Init player
					playerVars:{ modestbranding:1, controls:0, 					// Settings
						disablekb:1, rel:0, showinfo:0,},
	          		videoId: sd.playerSource,									// Set source
	         	 	events:{													// Add event handlers
	            		"onStateChange": function(s) {							// Change of state
		         			if (s.data == 1) {									// In play
								playerTRT=player.getDuration();					// Set TRT
								$("#playBut").attr("src","images/pausebut.gif");// Show pause but
								playerMode="play";								// Set mode
       							}
       						else if ((s.data == 2) || (s.data == 0)) {			// In pause
  								$("#playBut").attr("src","images/playbut.gif");	// Show play but
								playerMode="pause";								// Set mode
       							}
       						},
	            		"onReady": function(s) { RunPlayer("ready") }			// When ready
		 	   			}});
					}
			else if (playerType == "kaltura") {									// If Kaltura
				var v=sd.playerSource.split("|");								// Split parts
				mw.setConfig("KalturaSupport.LeadWithHTML5",true);				// Try using HTML5 player first
				kWidget.embed({	targetId: "playerDiv",							// Embed
					wid:v[2], uiconf_id:v[3], entry_id:v[1],					// PartnerIid, confId, clipId
					flashvars:{ externalInterfaceDisabled:false	},				// Enable control
		        	readyCallback: function(playerId){							// On ready
						if (!player) {											// Not initted yet
							player=$('#'+playerId)[0];							// Set player
							player.sendNotification("enableGui",{ guiEnabled:false, enableType: "controls" });// No controls
										
							player.addJsListener("playerStateChange",function(e) {	// Player state change
								if (e == "playing")	{							// On playing														
									$("#playBut").attr("src","images/pausebut.gif");// Show pause but
									playerMode="play";							// Set mode
									}
								else if (e == "paused")	{						// On pause														
									$("#playBut").attr("src","images/playbut.gif");	// Show play but
									playerMode="pause";							// Set mode	
       								}
								});
 							player.addJsListener("playbackComplete",function(e){// On done
								$("#playBut").attr("src","images/playbut.gif");	// Show play but
								playerMode="pause";								// Set mode	
								});
							player.addJsListener("durationChange",function(e) {	// On duration change
								playerTRT=e;									// Set TRT
								});
							player.addJsListener("playerUpdatePlayhead",function(e) {	// On duration change
								playerCurTime=e;								// Swt current time
								});
							RunPlayer("ready");									// Set up player
			        		}
			        	}	
				     });
		    	
		    	}
			else if (playerType == "vimeo") {									// If Vimeo
				str="<iframe id='vplayer' src='//player.vimeo.com/video/";		// Iframe start
				str+=sd.playerSource;											// Add source
				str+="?api=1&player_id=vplayer' width='500' height='281' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>";
				$("#playerDiv").html(str);										// Add vimeo iframe
		       	player=$("#vplayer")[0];										// Point to iframe
				}
			else if (playerType == "html5") {									// If HTML5
				var base=sd.playerSource.match(/(.*)\.[^.]+$/i)[1];				// Extract base
				str="<video id='vplayer' width='100%' height='100%'>";			// Video tag
				if (sd.playerSource.match(/\.mp3/i)) {							// If audio
					str+="<source src='"+base+".mp3' type='audio/mp3'>";		// MP3 Source
					str+="<source src='"+base+".ogg' type='audio/ogg'>";		// OGG Source
					}
				else{															// VIDEO
					str+="<source src='"+base+".mp4' type='video/mp4'>";		// MP4 Source
					str+="<source src='"+base+".ogg' type='video/ogg'>";		// OGG Source
					}
				str+="</video>"
				$("#playerDiv").html(str);										// Add video tag
  			
  				$("#vplayer")[0].oncanplay= function() {						// When ready
 					if (player) 												// Already initted
						return;													// Quit
       				playerApect=$("#vplayer").height()/$("#vplayer").width();	// Set aspect
       				player=$("#vplayer")[0];									// Point to player
       				playerTRT=player.duration;									// Set TRT
					trace(1)
					RunPlayer("ready");											// Set up player
					};

				$("#vplayer")[0].onended= function() {							// When ready
  					RunPlayer("pause");											// Pause
					};
	    		}
			}																	// End init
 	}																			// End closure

	function RunSlide(what )												// SLIDE ACTIONS
	{
		var i,str;
		if (what == "show") 													// Show
			ShowContent(slidePane,"slideDiv");									// Show content
		else if (what == "last") { 												// Go to previous slide
			var n=showVectors[slidePane].length-1;								// Last vector
			for (i=n;i>0;i--) 													// For each vector
				if (playerNow >= showVectors[slidePane][i].ps) {				// In this one
					RunPlayer("scrub",showVectors[slidePane][i-1].ps);			// Go there
					break;														// Quit looking
					}
			}
		else if (what == "next") { 												// Go to next slide
			var n=showVectors[slidePane].length-1;								// Last vector
			for (i=n-1;i>=0;i--) 												// For each vector
				if (playerNow >= showVectors[slidePane][i].ps) {				// In this one
					RunPlayer("scrub",showVectors[slidePane][i+1].ps);			// Go there
					break;														// Quit looking
					}
			}
		else if (what == "resize") 												// Resize
			$("#slideDivIF").height($("#slideDiv").height()-2);					// Set iframe height, if any
		}																		// End closure

	function RunInfo(what, param)											// INFO ACTIONS
	{
		if (what == "show") 													// Show
			ShowContent(infoPane,"informationText");							// Show content
		else if (what == "resize") 												// Resize
			$("#infoDivIF").height($("#informationText").height()-2);			// Set iframe height, if any
	}																			// End closure


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HELPERS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	
	function Popup(msg)
	{
		var x=$("#playerDiv").width()/2-50;
		var y=$("#playerDiv").css("top").replace(/px/,"")-30+$("#playerDiv").height()/2;
		$("#popup").remove();
		var str="<div id='popup' style='position:absolute;display:none;background-color:#eee;left:"+x+"px;top:"+y+"px;border:1px solid;padding:12px' class='rounded-corners'>"+msg+"</div>";
		$("body").append(str)
		$("#popup").show().delay(700).hide(300)
		}

	function MakeVectors(pane, rlc)											// CREATE TIMIMG VECTOR ARRAY
	{
		var i,o,c="";
		for (i=0;i<rlc.length-1;++i) {											// For each run length
			o={};																// New obj
			o.ps=rlc[i].a;														// Time start
			o.cs=rlc[i].b;														// Content start
			if (rlc[i].c)														// If a width set
				c=rlc[i].c;														// Use it
			if (c)																// If something there							
				o.c=c;															// Set 3rd param
			o.pd=rlc[i+1].a-rlc[i].a;											// Set time duration
			if (!isNaN(o.cs))													// If numeric content
				o.cd=rlc[i+1].b-rlc[i].b;										// Set content duration
			if (rlc[i].d != undefined)	o.d=rlc[i].d;							// Add param if set
			if (rlc[i].e != undefined)	o.e=rlc[i].e;							// Add param if set
			showVectors[pane].push(o);											// Add to vector list
			}
	}

	function MakeSelect(id, multi, items, sel, extra, values)				// CREATE HTML SELECT
	{
		var	str="<select id='"+id+"'";											// Header
		if (multi)																// Multi select
			str+="multiple='multiple' size='"+multi+"'";						// Add flag
		if (extra)																// If extra param
			str+=extra;															// Add them
		str+=">";																// End header
		for (i=0;i<items.length;++i) {											// For each option
			str+="<option";														// Add tag
			if (sel == items[i])												// If selected
				str+=" selected='selected'"										// Add tag
			if (values && values[i])											// If has a value
				str+=" value='"+values[i]+"'";									// Add it
			str+=">"+items[i]+"</option>";										// End option
			}	
		return str+"</select>";													// End select				
	}

	function TimecodeToSeconds(timecode) 									// CONVERT TIMECODE TO SECONDS
	{
		var h=0,m=0;
		var v=(""+timecode).split(":");											// Split by colons
		var s=v[0]																// Add them
	 	if (v.length == 2)														// Just minutes, seconds
			s=v[1],m=v[0];														// Add them
		else if (v.length == 3)													// Hours, minutes, seconds
			s=v[2],m=v[1],h=v[0];												// Add them
		return(Number(h*3600)+Number(m*60)+Number(s));							// Convert
	}
	
	function SecondsToTimecode(secs) 										// CONVERT SECONDS TO TIMECODE
	{
		var str="",n;
		n=Math.floor(secs/3600);												// Get hours
		if (n) str+=n+":";														// Add to tc
		n=Math.floor(secs/60);													// Get mins
		if (n < 10) str+="0";													// Add leading 0
		str+=n+":";																// Add to tc
		n=Math.floor(secs%60);													// Get secs
		if (n < 10) str+="0";													// Add leading 0
		str+=n;																	// Add to tc
		return str;																// Return timecode			
	}	

	function trace(msg, p1, p2, p3, p4)										// CONSOLE 
	{
		if (p4 != undefined)
			console.log(msg,p1,p2,p3,p4);
		else if (p3 != undefined)
			console.log(msg,p1,p2,p3);
		else if (p2 != undefined)
			console.log(msg,p1,p2);
		else if (p1 != undefined)
			console.log(msg,p1);
		else
			console.log(msg);
		
	}
	
	
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DEMO DATA
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


	sd={title:"Bill Clinton speaks at TED Conference",
		contentLab:"Contents",
		transLab:"Transcript",
		infoLab:"Transcript",
		transInfoRatio:.5,
		transHgt:400,
		transLanguage:"English",	
		transLangs:"None|English|Spanish|French|Tibetan",
		transText:"I thought in getting up to my TED wish I would try to begin by putting in perspective what I try to do and how it fits with what they try to do. We live in a world that everyone knows is interdependent, but insufficient in three major ways. It is, first of all, profoundly unequal: half the world's people still living on less than two dollars a day; a billion people with no access to clean water; two and a half billion no access to sanitation; a billion going to bed hungry every night; one in four deaths every year from AIDS, TB, malaria and the variety of infections associated with dirty water -- 80 percent of them under five years of age. Even in wealthy countries it is common now to see inequality growing. In the United States, since 2001 we've had five years of economic growth, five years of productivity growth in the workplace, but median wages are stagnant and the percentage of working families dropping below the poverty line is up by four percent. The percentage of working families without health care up by four percent. So this interdependent world which has been pretty good to most of us -- which is why we're all here in Northern California doing what we do for a living, enjoying this evening -- is profoundly unequal. It is also unstable. Unstable because of the threats of terror, weapons of mass destruction, the spread of global disease and a sense that we are vulnerable to it in a way that we weren't not so many years ago. And perhaps most important of all, it is unsustainable because of climate change, resource depletion and species destruction.\n\nWhen I think about the world I would like to leave to my daughter and the grandchildren I hope to have, it is a world that moves away from unequal, unstable, unsustainable interdependence to integrated communities -- locally, nationally and globally -- that share the characteristics of all successful communities: a broadly shared, accessible set of opportunities, a shared sense of responsibility for the success of the common enterprise and a genuine sense of belonging. All easier said than done. When the terrorist incidents occurred in the United Kingdom a couple of years ago, I think even though they didn't claim as many lives as we lost in the United States on 9/11, I think the thing that troubled the British most was that the perpetrators were not invaders, but homegrown citizens whose religious and political identities were more important to them than the people they grew up with, went to school with, worked with, shared weekends with, shared meals with. In other words, they thought their differences were more important than their common humanity. It is the central psychological plague of humankind in the 21st century.\n\nInto this mix, people like us, who are not in public office, have more power to do good than at any time in history, because more than half the world\'s people live under governments they voted in and can vote out. And even non-democratic governments are more sensitive to public opinion. Because primarily of the power of the Internet, people of modest means can band together and amass vast sums of money that can change the world for some public good if they all agree. When the tsunami hit South Asia, the United States contributed 1.2 billion dollars. 30 percent of our households gave. Half of them gave over the Internet. The median contribution was somewhere around 57 dollars. And thirdly, because of the rise of non-governmental organizations. They, businesses, other citizens' groups, have enormous power to affect the lives of our fellow human beings. When I became president in 1993, there were none of these organizations in Russia. There are now a couple of hundred thousand. None in India. There are now at least a half a million active. None in China. There are now 250,000 registered with the government, probably twice again that many who are not registered for political reasons.\n\nWhen I organized my foundation, and I thought about the world as it is and the world that I hope to leave to the next generation, and I tried to be realistic about what I had cared about all my life that I could still have an impact on. I wanted to focus on activities that would help to alleviate poverty, fight disease, combat climate change, bridge the religious, racial and other divides that torment the world, but to do it in a way that would either use whatever particular skills we could put together in our group to change the way some public good function was performed so that it would sweep across the world more.",
		playerQuality:"Default",
		playerVolume:75,
		playerSpeed:50,
		playerStart:0,
		playerStop:367,
//		playerSource:"7100569",
		playerSource:"ft24bHtNJwY",
//		playerSource:"kaltura|0_un4gy128|_322481|8145862",
//		playerSource:"//primaryaccess.org/narration.mp3",
//		playerSource:"http://www.w3schools.com/html/mov_bbb.mp4",
		playerAuto:"false",
		playerAspect:.5625,
		playerSlideRatio:.5,
		width:1000,
		toc:[ 
			{start:"00:00",title:"Opening credits"},
			{start:"00:26",title:"My TED wish"},
			{start:"00:54",title:"An unequal world"},
			{start:"01:23",title:"An unstable world"},
			{start:"02:23",title:"The world I want to see"},
			{start:"03:08",title:"London"},
			{start:"03:50",title:"Power of people"},
			{start:"05:14",title:"Clinton foundation"},
			{start:"06:01",title:"Closing remarks"} 
			],
		transVectors: [
			{ a:0,   b:0, c:0 },
			{ a:26,  b:0, c:60 },	
			{ a:54,  b:262  },	
			{ a:78,  b:648  },	
			{ a:120, b:1246 },	
			{ a:143, b:1584 },	
			{ a:169, b:1899 },	
			{ a:188, b:2085 },	
			{ a:230, b:2736 },	
			{ a:314, b:3926 },	
			{ a:367, b:4554 } 
			],	
		slideVectors: [ 
			{ a:0,   b:"//www.viseyes.org/shiva/qmedia/clinton01.jpg", d:.5 },
			{ a:26,  b:"//www.viseyes.org/shiva/qmedia/clinton02.jpg", d:.8 },	
			{ a:54,  b:"//www.viseyes.org/shiva/qmedia/clinton03.jpg", d:.5 },	
			{ a:78,  b:"//www.viseyes.org/shiva/qmedia/clinton04.jpg" },	
			{ a:120, b:"//www.viseyes.org/shiva/qmedia/clinton05.jpg" },	
			{ a:143, b:"//www.viseyes.org/shiva/qmedia/clinton06.jpg" },	
			{ a:169, b:"//www.viseyes.org/shiva/qmedia/clinton07.jpg" },	
			{ a:188, b:"//www.viseyes.org/shiva/go.htm?e=1103" },	
			{ a:230, b:"//www.viseyes.org/shiva/qmedia/clinton09.jpg" },	
			{ a:314, b:"//www.viseyes.org/shiva/qmedia/clinton10.jpg" },	
			{ a:367, b:"" }
			],	
		infoVectors: [ 
			{ a:0,   b:"info.jpg" },
			{ a:93,  b:"//www.viseyes.org/shiva/go.htm?e=375" },	
			{ a:108, b:"info.jpg" },	
			{ a:188, b:"//www.viseyes.org/shiva/qmedia/clinton08.jpg" },	
			{ a:314, b:"//www.clintonfoundation.org", c:"scroll" },	
			{ a:367, b:"" } 
			]	
		}	

	
</script>
</body></html>