<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="qlogo.ico">
	<title>Qmedia Editor</title>
 	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>	
	<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css" />
	<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
	<script src="jquery.ui.touch-punch.min.js"></script>
	<script src="qfile.js"></script>
	<style type="text/css">
		body { 			font-family:Verdana,Geneva,sans-serif; font-size:10px;}
		.rounded-corners { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		tr.odd { 		background-color:#e0e0e0; }
		td:focus {		outline:none;	}
		.ui-autocomplete { max-height: 300px; overflow-y: auto; }
	
 		.unselectable { -moz-user-select: none;     -khtml-user-select: none;
		   			 	-webkit-user-select: none;  -ms-user-select: none;   user-select: none;
		   				}
 	 	.player { 		display:inline-block;margin:0px;border:none;padding:0px;
 	 					}
	 	.pane 	{ 		background-color:#f0f0f0;font-size:12px
	 					}
	 	.footer { 		margin:-1px;border-bottom-right-radius:4px;border-bottom-left-radius:4px; 
	 					border:1px solid #999;background-color:#ddd;font-size:13px;
	 					padding:0px;padding-top:4px;padding-bottom:4px;
	 					display:inline-block;top:100%;width:100%;
	 					}
	 	.editor { 		border-radius:4px;border:1px solid #999;min-width:400px;
	 					}
		.butSty {		border-radius:10px;color:#333;cursor:pointer;
						}
 		.ui-menu {     	overflow:hidden;border:none;font-size:13px;
 						border-radius:0px;border-bottom:1px solid #999;padding:0px !important;
 						}
		.ui-menu > li { 				float: left;display: block;width: auto !important;}
		.ui-menu ul {   				border:1px solid #999;border-radius:4px;padding-bottom:6px !important;}
		.ui-menu ul li {   				display:block;float:none;border:none }
		.ui-menu ul li ul {    			width:auto; left:96px !important; padding-top:5px !important;padding-bottom:5px !important;}
		.ui-menu ul li ul li {    		width:auto !important; margin: 0px 5px !important; }
		.ui-menu ul li ul li a {   	 	float:left; }
		.ui-menu li {    				margin: 5px 5px !important; padding: 0 0 !important; }
		.ui-menu > li > a {  			float:left;display:block;clear: both;overflow: hidden; }
		.ui-menu .ui-menu-icon {     	display:none }
		.ui-menu .ui-menu .ui-menu li { float:left;display:block; }	
 		.ui-menu .ui-menu { 		    overflow: visible !important; }
		.bs {			border-radius:10px;padding-left:8px;padding-right:8px;padding-top:1px;
						border:1px solid #999;font-size:12px;height;20px;
						}
		.is {			border-radius:10px;padding-left:8px;padding-right:8px;padding-top:1px;
						border:1px solid #999;font-size:12px;height;20px;width:200px;
						]


 	</style>
	<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
	  ga('create', 'UA-49268159-1', 'qmediaplayer.com');
	  ga('send', 'pageview');
	</script>
</head>

	<div id='playerDiv' class='unselectable' >
		<iframe class="player" id="playerIF" src="show.htm" height="100%" scrolling="no"></iframe>
	</div>
	<div id="editDiv" class="editor unselectable" style="position:absolute;top:16px;z-index:4"> 
		 <ul id="menu" style="margin:1px">
		    <li id=""><a href="#">File</a><ul>
				<li id="m11"><a  href="#">New</a></li>
				<li id="m12"><a href="#">Open</a></li>
				<li id="m13"><a href="#">Save</a></li>
				<li id="m14"><a href="#">Save As...</a></li>
				<li id="m15"><a href="#">Delete</a></li>
				<li id="m16"><a href="#">Undelete</a></li>
		   	</ul></li>
		    <li id=""><a href="#">Edit</a><ul>
				<li id="m21"><a href="#">Undo</a></li>
				<li id="m22"><a href="#">Redo</a></li>
	            <li id="m23"><a href="#">Bookmark&nbsp;an&nbsp;undo</a></li>
	            <li id="m24"><a href="#">Load&nbsp;bookmarked&nbsp;undo</a></li>
		 		<li id="m25"><a href="#">Settings</a></il>
		 		<li id="m26"><a href="#">JSON</a></il>
			</ul></li>
	 			<li id=""><a href="#">Content</a><ul>
	                <li id="m31"><a href="#">Sync content</a></li>
	                <li id="m32"><a href="#">Sync transcript</a></li>
	                <li id="m33"><a href="#">Edit index</a></li>
	                <li id="m34"><a href="#">Edit assessments</a></li>
	            </ul>
			<li id="m4" ><a href="#">Preview</a><li>
		</ul>
		<div id="paneDiv" class="pane" style="width:100%;height:100%"></div> 
		<div id="footerDiv" class="footer" style="position:absolute;width:100%">
			<span id="showName"></span>
			<a id='getHelp' href='https://docs.google.com/document/d/1hMjG_Df0ifMjbT3a9j_KVjieMllkY0J_5UInOlkQweE/edit?usp=sharing' 
				target='_blank' style='text-decoration:none;position:absolute'>
				<img src="images/helpicon.gif"></a>
		</div>
	</div>
	<div id="playerSiz" style="position:absolute;top:0px;width:8px;cursor:col-resize;opacity:inherit;height:100%" class="unselectable" title="Resize player"></div>
		
<body>
<script>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	var curShow="";																// Currently loaded show name
	var curPane="intro";														// Current edit pane
	var curJson=null;															// Holds current JSON
	var curTime=0;																// Current time of show player
	var qmf=null;																// File system
	var curPage=curEdit=-1;														// Current row editing
	var butsty=" style='border-radius:10px;color#666;padding-left:12px;padding-right:12px;color:#222;background-color:#ccc;font-size:12px;' ";	// Button styling
	var keyFlag="";																// Holds key flags												
	var defTransDur=60;															// Default trancript line duration
	var playerZoom=1;
	
	$(document).ready(function() {											// WHEN PAGE LOADED
		if (window.addEventListener) 											// If supported this way
			window.addEventListener("message",shivaEventHandler,false);			// Add event handler
		else																	// Use other method
			window.attachEvent("message",shivaEventHandler);					// Add handler

		qmf=new QmediaFile();													// Alloc file system
		NewShow();																// Init show

		$("#menu" ).menu({ position:{my:"left top", at: "left top+40" }});		// Set menu
		$("#menu").on("menuselect", function(event,ui) { 						// On menu select
				var id=ui.item[0].id.substr(1);									// Get id
				if (id)	Sound("click");											// Click
				switch(id) {													// Route on id
					case "11":	ConfirmBox("This will clear the project you current have open. It will not affect the one stored online",NewShow);
								ChangePane("intro");	Preview();		break;	// New file
					case "12":	ChangePane("intro");	qmf.Load(); 	break;	// Load file
					case "13":	ChangePane("intro");	qmf.Save(0); 	break;	// Save file
					case "14":	ChangePane("intro");	qmf.Save(1); 	break;	// Save as... 
					case "15":	ChangePane("intro");	qmf.Delete(); 	break;	// Delete
					case "16":	ChangePane("intro");	qmf.Delete(1); 	break;	// Undelete
					case "25":	ChangePane("settings");					break;	// Edit settings
					case "26":	ChangePane("json");						break;	// Edit JSON
					case "31":	ChangePane("content");					break;	// Manage content
					case "32": 	ChangePane("transcript");  				break;	// Transcript
					case "33": 	ChangePane("index");  					break;	// Index 
					case "34": 	ChangePane("assessment");  				break;	// Assessment content
					case "4":	ChangePane(curPane);	Preview();		break;	// Preview
					}
			 	});
		
		Draw();
		$(window).resize(Draw); 		
		setInterval(function() { SendShivaMessage("Qmedia=time") },500); 		// Set timer 1-fps
		qmf.LoadFile("qmf1");													// Load project

		$("#playerSiz").draggable({												// DRAG PLAYER WIDTH HANDLER
			cursorAt:{left:-8},iframeFix:true,									// Cursor offset
			cursor: "col-resize", axis:"x",										// X-only
			containment:[0,0,curJson.width,0],
			drag: function(event, ui) {											// On drag
			 	playerZoom=Math.max(0,Math.min(1,(event.clientX)/curJson.width));	// Set ratio between windows
				Draw();															// Resize panes
				}
			});
		$("#playerSiz").hover(													// Player width
			function(){ $(this).css("background-color","#acc3db")},				// Highlight
			function(){ $(this).css("background-color","transparent")			// Hide
		});

	});	
	
	function NewShow() 														// NEW SHOW
	{	
		curJson={};																// New obj
		curJson.title="Title goes here";										// Set defaults
		curJson.playerStop=600;
		curJson.width=1000;
		curJson.playerSource="3_T9Un5hWAg";
		curJson.playerAspect=.5625;
		curJson.infoLab="";
	}

	function LoadShow(data)													// LOAD A SHOW
	{
 		if (data.qmfmsg == "private") {											// If a private file		
			AlertBox("Private project","Sorry, but this project is marked <i>private</i>. You will need to supply the password to load it");
			return;																// Quit
			}
		else if (data.qmfmsg == "error") {										// If an error
			AlertBox("Sorry, but there was an error loading this project");
			return;																// Quit
			}
  		curJson=data;															// Set json
   		if (qmf.curFile)														// If a good file
   			curShow=qmf.curFile;												// Set curshow
  		Preview(); 																// Preview show
   		Draw();																	// Redraw 
   		Sound('ding'); 															// Ding
    	}

	function Preview(time)													// PREVIEW SHOW
	{
		Do();																	// Save for undo
		if (time) {																// If a rolling preview
			var ta=curJson.playerAuto;											// Save old setting
			var ts=curJson.playerStart;											// Save old setting
			curJson.playerAuto="true";											// Set autoplay
			curJson.playerStart=Math.max(curTime-0+time,0);						// Set start
			}
		Sound("click");															// Click
		SendShivaMessage("Qmedia=data",JSON.stringify(curJson));				// Send to show player	   		
   		if (time) {																// If a rolling preview
			curJson.playerAuto=ta;												// Restore old setting
			curJson.playerStart=ts;												// Restore old setting
			}
   	}
   	
   	
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EDIT PANES
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	function ChangePane(newPane) 											// CHANGE EDIT PANE
	{	
		if (curPane == "json") {												// If current pane is JSON editor
			var str=$("#jsonEditor").val();										// Get script
			//Checkit!!!!
			curJson=$.parseJSON(str);											// Get editor contents
			}
			
		curPane=newPane;														// Set current pane
		Draw();																	// Redraw
	}
	
	function Draw()															// RESIZE PANES
	{ 
		var str;
		var w=window.innerWidth-curJson.width*playerZoom-32;					// Editor width
		var h=window.innerHeight-64;											// Editor height
		$("#playerIF").prop("width",curJson.width);								// Player wid
		$("#playerIF").prop("height",h+40);										// Hgt
		$("#editDiv").css({width:w+"px",left:curJson.width*playerZoom+16+"px",height:h+"px"});		// Overall div
		$("#getHelp").css({left:w-24+"px"});									// Help dot to right
	
		$("#showName").html("&nbsp; Current show: <b>"+curShow+"</b>");			// Show name
		if (curPane == "json") {												// Editing pane
			str="<textarea id='jsonEditor' style='width:"+(w-17)+"px;height:"+(h-55)+"px;border:none;font-size:13px;padding:8px;background-color:#f8f8f8'>"+JSON.stringify(curJson,null,'\t')+"</textarea></div>";
			$("#paneDiv").html(str);											// Put editor up	
			}
		else if (curPane == "intro") {											// Startup pane
			str="<br><br><p style='text-align:center'><img src='qlogo.png' width='80%'></p>";	// Image
			$("#paneDiv").html(str);											// Put editor up	
			}
		else if (curPane == "content") 		ContentEditPane();					// Content pane
		else if (curPane == "index") 		IndexEditPane();					// Index pane
		else if (curPane == "transcript")   TranscriptEditPane();				// Transcript pane
		else if (curPane == "settings")  	SettingsEditPane();					// Settings pane
		else if (curPane == "assessment") 	AssessmentEditPane();				// Assessment pane

		$("#playerDiv").css({	"-webkit-transform-origin":"0 0", 				// Scale player window
				"transform-origin":"0 0",			
				"-webkit-transform":"matrix("+playerZoom+",0,0,"+playerZoom+",0,0)",
	 			"-transform":"matrix("+playerZoom+",0,0,"+playerZoom+",0,0)",
	   			});
		
		$("#playerSiz").css({ left:(curJson.width*playerZoom+8)+"px"});			// Set sizer pos
	}

///////////// INDEX ////////////////


	function IndexEditPane()												// INDEX EDITOR
	{
		curEdit=-1;																// Clear
		var str="<div style='padding:12px'><br>"								// Container div
		str+="<div style='font-size:36px;color:#999'><b>Edit Index</b></div>"	// Title
		str+="<br><br><div style='max-height:300px;overflow-y:auto;background-color:#f8f8f8;padding:8px;border:1px solid #999;border-radius:8px'>";		// Scrollable container
		str+="<table id='indexTable' style='font-size:12px;width:100%;padding:0px;border-collapse:collapse;'>";	// Add table
		str+="<tr><td><b>Time</b></td><td><b>Index</b></td><td><b>Style</b></td><td><b>Indent</b></td><td></td></tr>";	// Add header
		str+="<tr><td colspan='5'><hr></td></tr>";								// Add rule
		if (!curJson.indexVectors)												// No index yet
			curJson.indexVectors=[];											// Alloc it
		if (curJson.indexVectors)												// If any indices
			n=curJson.indexVectors.length;										// Get length
		str+="</table></div><div style='font-size:12px'<br><br>";				// End table
		str+="<button"+butsty+"id='addBut'>Add a new row to index</button>";	// Add button
		str+="&nbsp;&nbsp;<button"+butsty+"id='preBut'>Preview</button>";		// Preview button
		$("#paneDiv").html(str+"</div>");										// Put editor up	
		MakeIndexTable();														// Make table
	
		$("#paneDiv").on("click",function(e) {									// ON OUTSIDE CLICK
			if (e.target.id == "paneDiv") {										// If on pane
				Sound("click");													// Click
				onClickIndex();													// Deselect current edit row
				}
			});

		$("#preBut").on("click",function() {									// ON PREVIEW
			Sound("click");														// Click
			curEdit=-1;															// Not editing anymore
			MakeIndexTable();													// Remake table
			Preview();															// Run preview
			});
		
		$("#addBut").on("click",function() {									// ON ADD
			curJson.indexVectors.push({t:curTime,c:""})							// Add to json
			curEdit=-1;															// Not editing anymore
			MakeIndexTable();													// Remake table
			Sound("click");														// Click
			});
	}
	
	function MakeIndexTable() 												// MAKE TABLE AND SORT BY TIME
	{	
		var i,n=0,l,s;
		var trsty=" style='height:20px;cursor:pointer;background-color:#f8f8f8' onMouseOver='this.style.backgroundColor=\"#dee7f1\"' ";
		trsty+="onMouseOut='this.style.backgroundColor=\"#f8f8f8\"' onclick='onClickIndex(this.id)'";
		curJson.indexVectors.sort(function(a,b) { return a.t-b.t });			// Sort by time
		if (curJson.indexVectors)												// If any indices
			n=curJson.indexVectors.length;										// Get length
		$("#indexTable tr:gt(1)").remove();										// Remove all rows
		for (i=0;i<n;++i) {														// For each index
			l=s="-";															// Null indicator
			if (curJson.indexVectors[i].l)	l=curJson.indexVectors[i].l;		// If an indent set
			if (curJson.indexVectors[i].s)	s=curJson.indexVectors[i].s.toUpperCase();			// If style set
			str="<tr id='idx"+i+"' "+trsty+">";													// Row
			str+="<td style='color:#009900;width:60px;:focus{outline:none}' id='idt"+i+"'>"+SecondsToTimecode(curJson.indexVectors[i].t)+"</td>";	// Add time
			str+="<td id='idc"+i+"' contenteditable=true>"+curJson.indexVectors[i].c+"</td>"; 	// Add index
			str+="<td id='ids"+i+"' onclick='onClickIndexStyle(this.id)'>"+s+"</td>";			// Add style
			str+="<td id='idi"+i+"' onclick='onClickIndexIndent(this.id)'>"+l+"</td>"			// Add indent
			str+="<td><img style='visibility:hidden' id='idd"+i+"' src='images/trashdot.gif' onclick='onDeleteIndex(this.id)'></td></tr>";	// Add trashcan
			$("#indexTable").append(str);										// Add row
			
			$("#idc"+i).on("blur", function() {									// ON BLUR OF CONTENT
				var i=this.id.substr(3);										// Get id
				curJson.indexVectors[i].c=$("#idc"+i).text();					// Get text
				});				
			
			}
	}	

	function onDeleteIndex(id) 												// ON DELETE INDEX
	{	
		id=id.substr(3);														// Strip off prefix
		curJson.indexVectors.splice(id,1);										// Remove from json
		$("#idx"+id).remove();													// Remove from table
		Sound("delete");														// Delete sound
	}

	function onClickIndex(id) 												// ON CLICK INDEX
	{	
		SendShivaMessage("Qmedia=pause");										// Pause
		for (var i=0;i<curJson.indexVectors.length;++i) {						// For each index
			$("#idt"+i).css({"color":"#009900"});								// Restore
			$("#idc"+i).css({"color":"#000000"});								// Restore
			$("#idd"+i).css({"visibility":"hidden"});							// Restore
			}	
		curEdit=-1;																// No selected edit
		if (id == undefined)													// If deselecting
			return;																// Quit
		curEdit=id.substr(3);													// Strip off prefix
		SendShivaMessage("Qmedia=seek",""+curJson.indexVectors[curEdit].t);		// Go to time
		$("#idt"+curEdit).css({"color":"#990000"});								// Highlight
		$("#idc"+curEdit).css({"color":"#990000"});								// Highlight
		$("#idd"+curEdit).css({"visibility":"visible"});						// Show trashcan
	}

	function onClickIndexStyle(id) 											// ON CLICK INDEX STYLE
	{	
		id=id.substr(3);														// Strip off prefix
		var s=curJson.indexVectors[id].s;										// Get style
		if (!s || (s == "-"))	s="B";											// Move up
		else if (s == "B")		s="I";						
		else if (s == "I")		s="B+I";
		else if (s == "B+I")	s="-";
		$("#ids"+id).text(s == "0" ? "-" : s);									// Set row
		curJson.indexVectors[id].s=s;											// Set style
	}

	function onClickIndexIndent(id) 										// ON CLICK INDEX INDENT
	{	
		id=id.substr(3);														// Strip off prefix
		var s=curJson.indexVectors[id].l;										// Get indent
		if (!s || (s == "0"))	s="1";											// Move up
		else if (s == "1")		s="2";						
		else if (s == "2")		s="3";
		else if (s == "3")		s="0";
		$("#idi"+id).text(s);													// Set row
		curJson.indexVectors[id].l=s;											// Set level
	}

///////////// TRANSCRIPT ////////////////


	function TranscriptEditPane()											// TRANSCRIPT EDITOR
	{
		curEdit=-1;																// Clear
		var w=($("#paneDiv").width()-140)/2;									// Width of halves
		var str="<div style='padding:12px'><br>"								// Container div
		str+="<div style='font-size:36px;color:#999'><b>Sync Transcript</b></div>"	// Title
		str+="<br><br><div style='max-height:300px;overflow-y:auto;background-color:#f8f8f8;padding:8px;border:1px solid #999;border-radius:8px'>";		// Scrollable container
		str+="<table id='transTable' style='table-layout:fixed;font-size:13px;width:100%;padding:0px;border-collapse:collapse;'>";	// Add table
		str+="<tr><td width='50'><b>Time</b></td><td></td><td   width='"+(w+15)+"'><b>Anchor</b></td><td width='20'></td></tr>";	// Add header
		str+="<tr><td colspan='4'><hr></td></tr>";								// Add rule
		str+="</table></div><div style='font-size:12px'<br><br>";				// End table
		str+="<button"+butsty+"id='addAncBut'>Add anchor</button>";				// Add button
		str+="&nbsp;&nbsp;<button"+butsty+"id='preBut1'>Preview</button>";		// Preview button
		str+="&nbsp;&nbsp;<button"+butsty+"id='pauseBut'>Pause</button>";		// Pause button
		str+="<br><br><p><b>Transcript:</b></p><textarea id='transText' style='width:100%;border:1px solid #999;border-radius:8px;color:#999;font-size:12px'>"
		str+=curJson.transText ? curJson.transText : "" +"</textarea>";
		
		$("#paneDiv").html(str+"</div>");										// Put editor up	
		MakeTransTable();														// Make table
	
		$("#preBut1").on("click",function() {									// ON PREVIEW
			Sound("click");														// Click
			curEdit=-1;															// Not editing anymore
			MakeTransTable();													// Remake table
			curJson.transText=$("#transText").val();							// Update transcript text
			Preview(-1);														// Run preview
			});
		
		$("#addAncBut").on("click",function() {									// ON ADD
			if (!curJson.transText) 
				return AlertBox("Need transcript text","Sorry, you need some transcript text before adding anchors");	// Needs text
			if (!curJson.transVectors)	{										// No vectors yet
				curJson.transVectors=[];										// Alloc it
				curJson.transVectors.push({ t:0,c:0,d:defTransDur} );				// Add first			
				curJson.transVectors.push({t:curJson.playerStop,c:curJson.transText ? curJson.transText.length : 0 });	// Add last			
				}		
			curJson.transVectors.push({t:curTime,c:""})							// Add to json
			MakeTransTable();													// Remake table
			Sound("click");														// Click
			});

		$("#pauseBut").on("click",function() {									// ON PAUSE
			SendShivaMessage("Qmedia=pause");									// Pause
			});

		$("#paneDiv").on("click",function(e) {									// ON OUTSIDE CLICK
			if (e.target.id == "paneDiv") {										// If on pane
				Sound("click");													// Click
				onClickIndex();													// Deselect current edit row
				}
			});

	}

	function MakeTransTable() 												// MAKE TABLE AND SORT BY TIME
	{	
		var i,n=0;
		var nc=($("#paneDiv").width()-60)/18;										// Chars left of anchor
		var trsty=" style='height:20px;cursor:pointer;background-color:#f8f8f8' onMouseOver='this.style.backgroundColor=\"#dee7f1\"' ";
		trsty+="onMouseOut='this.style.backgroundColor=\"#f8f8f8\"' onclick='onClickTrans(this.id)'";
		if (curJson.transVectors) {												// If any indices
			curJson.transVectors.sort(function(a,b) { return a.t-b.t });		// Sort by time
			n=curJson.transVectors.length;										// Get length
			}
		$("#transTable tr:gt(1)").remove();										// Remove all rows
		for (i=0;i<n;++i) {														// For each index
			str="<tr id='idx"+i+"' "+trsty+">";									// Row
			s=curJson.transVectors[i].c;										// Start of line								
			str+="<td style='color:#009900;:focus{outline:none}' id='idt"+i+"'>"+SecondsToTimecode(curJson.transVectors[i].t)+"</td>";	// Add time
			str+="<td id='idl"+i+"' style='color:#999;overflow:hidden;white-space:nowrap;text-align:right'>"+curJson.transText.substring(s,s-nc)+"&nbsp;</td>"; 		// Add line
			str+="<td id='idr"+i+"' style='color:#000;overflow:hidden;white-space:nowrap'>"+curJson.transText.substring(s,s-0+80)+"</td>"; 	// Add line
			str+="<td  align='right'><img style='visibility:hidden' id='idd"+i+"' src='images/trashdot.gif' onclick='onDeleteTrans(this.id)'></td></tr>";	// Add trashcan
			$("#transTable").append(str);										// Add row
			}
		if (curEdit != -1) 	onClickTrans("idx"+curEdit);						// Highlight it
		if (n && curJson.transText)												// If a transcript
			curJson.transVectors[n-1].c=curJson.transText.length;				// Make last one end of text
	}	

	function onDeleteTrans(id) 												// ON DELETE TRANS
	{	
		id=id.substr(3);														// Strip off prefix
		curJson.transVectors.splice(id,1);										// Remove from json
		$("#idx"+id).remove();													// Remove from table
		Sound("delete");														// Delete sound
	}

	function onClickTrans(id) 												// ON CLICK TRANS
	{	
		SendShivaMessage("Qmedia=pause");										// Pause
		SendShivaMessage("Qmedia=pause");										// Pause
		for (var i=0;i<curJson.transVectors.length;++i) {						// For each row
			$("#idt"+i).css({"color":"#009900"});								// Restore
			$("#idl"+i).css({"color":"#999"});									// Restore
			$("#idr"+i).css({"color":"#000"});									// Restore
			$("#idd"+i).css({"visibility":"hidden"});							// Restore
			}	
		curEdit=-1;																// No selected edit
		if (id == undefined)													// If deselecting
			return;																// Quit
		curEdit=id.substr(3);													// Strip off prefix
		SendShivaMessage("Qmedia=seek",""+curJson.transVectors[curEdit].t);		// Go to time
		$("#idt"+curEdit).css({"color":"#990000"});								// Highlight
		$("#idl"+curEdit).css({"color":"#990000"});								// Highlight
		$("#idr"+curEdit).css({"color":"#990000"});								// Highlight
		$("#idd"+curEdit).css({"visibility":"visible"});						// Show trashcan
	}

///////////// ASSESSMENT ////////////////


	function PreviewAssessment()											// PREVIEW ASSESSMENT														
	{
		if (curEdit == -1) 														// If noting selected
			return;																// Quit
		var h=$("#paneDiv").height()-$("#addAssessBut").offset().top-50;		// Room for the page editor
		$("#pageDiv").css({height:h+"px",width:"400px"});						// Size appropriately
			
		$("#pageDiv").html("<iframe class='player' id='assessIF' src='assess.htm' width='99%' height='99%' 'scrolling='no'></iframe>");
		$("#assessIF").on("load", function() {									// When loaded
			$("#pageDiv").slideDown(300);										// Show the page
			var str="ShivaAct=data|"+JSON.stringify(curJson.assessments[curEdit]);	// Get data
			$("#assessIF")[0].contentWindow.postMessage(str,"*");				// Send data to wind
			});
	}	

	function AssessmentEditPane()											// ASSESSMENT EDITOR
	{
		curEdit=-1;																// Clear
		var w=($("#paneDiv").width()-75)/2;										// Width of halves
		var str="<div style='padding:12px'><br>"								// Container div
		str+="<div style='font-size:36px;color:#999'><b>Edit Assessments</b></div>"	// Title
		str+="<br><br><div style='display:inline-block;width:"+w+"px;max-height:200px;overflow-y:auto;background-color:#f8f8f8;padding:8px;border:1px solid #999;border-radius:8px'>";		// Scrollable container
		str+="<table id='assessTable' style='font-size:13px;width:100%;padding:0px;border-collapse:collapse;'>";	// Add table
		str+="<tr><td><b>Name</b></td><td width='20'></td></tr>";				// Add header
		str+="<tr><td colspan='2'><hr></td></tr>";								// Add rule
		str+="</table></div>&nbsp;&nbsp;&nbsp;"									// End table
	
		str+="<div style='vertical-align:top;display:inline-block;width:"+w+"px;max-height:200px;overflow-y:auto;background-color:#f8f8f8;padding:8px;border:1px solid #999;border-radius:8px'>";		// Scrollable container
		str+="<dl id='pageTable' style='font-size:13px;margin-top:2px;margin-bottom:2px'>";		// Add table
		str+="<dt><b>Step</b></dt>";											// Add header
		str+="<dt><hr></dt>";													// Add rule
		str+="</dl></div><div style='font-size:12px'<br><p><hr></p>";			// End table

		str+="<button"+butsty+"id='addAssessBut'>Add assessment</button>";						// Add assess button
		str+="&nbsp;&nbsp;<button"+butsty+"onclick='onAddPage()'>Add step</button>";			// Add page button
		str+="&nbsp;&nbsp;<button"+butsty+"onclick='PreviewAssessment()'>Preview assessment</button>";		// Preview button
		str+="<br><br><div id='pageDiv' style='display:none;overflow-y:auto;background-color:#f8f8f8;padding:8px;border:1px solid #999;border-radius:8px'>";		// Scrollable container
		
		$("#paneDiv").html(str+"</div>");										// Put editor up	
		$("#pageTable").sortable();												// Make it sortable
		MakeAssessTable();														// Make table
			
		$("#pageTable").on("sortstop", function(e, ui) {						// If sorted
			var t=$.parseJSON(JSON.stringify(curJson.assessments[curEdit].pages));	// Clone
			var v=$("#pageTable").sortable("toArray");							// Get new order
 			for (i=2;i<v.length;++i)											// For each option
 				curJson.assessments[curEdit].pages[i-2]=t[v[i].substr(3)];		// Reorder array
 			MakePageTable();													// Show pages
 			});

	
		$("#addAssessBut").on("click",function() {								// ON ADD
			if (!curJson.assessments)											// No assessmenrts yet
				curJson.assessments=[];											// Alloc it
			curJson.assessments.push({name:"untitled"})							// Add to json
			MakeAssessTable();													// Remake table
			Sound("click");														// Click
			});
		
		$("#preBut3").on("click",function() {									// ON PREVIEW
			Sound("click");														// Click
			curEdit=-1;															// Not editing anymore
			MakeAssessTable();													// Remake table
			});
	}

	function MakeAssessTable() 												// MAKE TABLE 
	{	
		var i,n=0,str;
		var trsty=" style='height:20px;cursor:pointer;background-color:#f8f8f8' onMouseOver='this.style.backgroundColor=\"#dee7f1\"' ";
		trsty+="onMouseOut='this.style.backgroundColor=\"#f8f8f8\"' onclick='onClickAssess(this.id)'";
		if (curJson.assessments) {												// If any indices
			n=curJson.assessments.length;										// Get length
			}
		$("#assessTable tr:gt(1)").remove();									// Remove all rows
		for (i=0;i<n;++i) {														// For each index
			str="<tr id='ida"+i+"' "+trsty+">";									// Row
			str+="<td id='idn"+i+"' contenteditable=true>"+curJson.assessments[i].name+"</td>"; 	// Add assessment name
			str+="<td align='right'><img style='visibility:hidden' id='idd"+i+"' src='images/trashdot.gif' onclick='onDeleteAssess(this.id)'></td></tr>";	// Add trashcan
			$("#assessTable").append(str);										// Add row
			
			$("#idn"+i).on("blur", function() {									// ON BLUR OF CONTENT
				var i=this.id.substr(3);										// Get id
				curJson.assessments[i].name=$("#idn"+i).text();					// Get text
				});				
			}

		if (curEdit != -1) 	onClickAssess("ida"+curEdit);						// Highlight it
	}	

	function onAddPage() 														// ON ADD ASSESS
	{	
		if (!curJson.assessments[curEdit].pages)								// If not pages yet
			curJson.assessments[curEdit].pages=[];								// Alloc array
		curJson.assessments[curEdit].pages.push({ title:"untitled",optionsType:"radio" });	// Add page to array
		curPage=curJson.assessments[curEdit].pages.length-1;					// Point at page
		Sound("click");															// Click sound
		MakePageTable();														// Make page table
	}

	function onDeleteAssess(id) 												// ON DELETE ASSESS
	{	
		id=id.substr(3);														// Strip off prefix
		curJson.assessments.splice(id,1);										// Remove from json
		$("#ida"+id).remove();													// Remove from table
		Sound("delete");														// Delete sound
	}

	function onClickAssess(id) 												// ON CLICK ASSESS
	{	
		for (var i=0;i<curJson.assessments.length;++i) {						// For each row
			$("#idn"+i).css({"color":"#000","font-weight":"normal"});			// Restore
			$("#idd"+i).css({"visibility":"hidden"});							// Restore
			}	
		curEdit=-1;																// No selected edit
		if (id == undefined)													// If deselecting
			return;																// Quit
		curEdit=id.substr(3);													// Strip off prefix
		$("#idn"+curEdit).css({"color":"#990000","font-weight":"bold"});		// Highlight
		$("#idd"+curEdit).css({"visibility":"visible"});						// Show trashcan
		curPage=-1;																// No selected edit
		MakePageTable();														// Make page table
		$("#pageDiv").slideUp(300);												// Hide the page
		Sound("click");															// Click
		}

	function MakePageTable() 												// MAKE TABLE 
	{	
		var i,n=0,str;
		var trsty=" style='height:20px;cursor:pointer;background-color:#f8f8f8' onMouseOver='this.style.backgroundColor=\"#dee7f1\"' ";
		trsty+="onMouseOut='this.style.backgroundColor=\"#f8f8f8\"' onclick='onClickPage(this.id)'";
		if (curJson.assessments[curEdit] && curJson.assessments[curEdit].pages) {	// If any indices
			n=curJson.assessments[curEdit].pages.length;						// Get length
			}
		$("#pageTable dt:gt(1)").remove();										// Remove all rows
		for (i=0;i<n;++i) {														// For each index
			str="<dt id='idp"+i+"' "+trsty+">";									// Row
			str+="<div id='idy"+i+"' style='display:inline-block;overflow:hidden;white-space:nowrap'>"+curJson.assessments[curEdit].pages[i].title+"</div>"; 	// Add assessment name
			$("#pageTable").append(str);										// Add row
			}
		if (curPage != -1) 	onClickPage("idp"+curPage);							// Highlight it
	}	

	function onClickPage(id) 												// ON CLICK PAGE
	{	
		for (var i=0;i<curJson.assessments[curEdit].pages.length;++i) {			// For each row
			$("#idy"+i).css({"color":"#000","font-weight":"normal"});			// Restore
			$("#idx"+i).css({"visibility":"hidden"});							// Restore
			}	
		curPage=-1;																// No selected edit
		if (id == undefined)													// If deselecting
			return;																// Quit
		curPage=id.substr(3);													// Strip off prefix
		$("#idy"+curPage).css({"color":"#990000","font-weight":"bold"});		// Highlight
		$("#idx"+curPage).css({"visibility":"visible"});						// Show trashcan
		EditPage();																// Edit page
		$("#pageDiv").slideDown(300);											// Show the page
		Sound("click");															// Click
		}

	function EditPage()
	{
		var i,str;
		var o=curJson.assessments[curEdit].pages[curPage];						// Point at page
		var h=$("#paneDiv").height()-$("#addAssessBut").offset().top-50;		// Room for the page editor
		$("#pageDiv").css({height:h+"px",width:"auto"});						// Size appropriately
		str="<table style='font-size:11px;padding:0px;border-collapse:collapse;'>";	// Add table
		str+="<tr><td><b>Step type</b></td><td>"+MakeSelect("optionType",false,["radio","checkbox","cloze","draw","findtime","write"],o.optionType)+"</td></tr>";	// Get setting
		str+="<tr><td><b>Title</b></td><td><input class='is' type='text' id='title' value='"+(o.title ? o.title :'')+"'></td></tr>";	// Get setting
		str+="<tr><td><b>Text</b></td><td><textarea class='is' id='text'>"+(o.text ? o.text :'')+"</textarea></td></tr>";	// Get setting
		str+="<tr><td><b>Prompt</b></td><td><textarea class='is' id='prompt'>"+(o.prompt ? o.prompt :'')+"</textarea></td></tr>";	// Get setting
		str+="<tr><td><b>Image</b></td><td><input class='is' type='text' id='pic' value='"+(o.pic ? o.pic :'')+"'></td></tr>";	// Get setting
		str+="<tr><td><b>If right answer</b></td><td><textarea class='is' id='whyRight'>"+(o.whyRight ? o.whyRight :'')+"</textarea></td></tr>";	// Get setting
		str+="<tr><td><b>If wrong answer</b>&nbsp;</td><td><textarea class='is' id='whyWrong'>"+(o.whyWrong ? o.whyWrong :'')+"</textarea></td></tr>";	// Get setting
		str+="<tr><td><b>If partial answer</b>&nbsp;</td><td><textarea class='is' id='whyPartial'>"+(o.whyPartial ? o.whyPartial :'')+"</textarea></td></tr>";	// Get setting
		str+="<tr><td><b>Number of tries</b></td><td><input class='is' type='text' id='numTries' value='"+(o.numTries ? o.numTries :'')+"'></td></tr>";	// Get setting
		str+="<tr><td colspan=2><hr></td></tr>";
		str+="<tr><td><b>Options</b></td><td><dl id='optionsTable'>";
		if (o.options) {
			str+="";
			for (i=0;i<o.options.length;++i) {
				str+="<dt id='ido"+i+"'><input class='bs' type='text' id='idr"+i+"' value='"+(o.options[i] ? o.options[i] :'')+"'>"; 	// Add index
				str+="&nbsp;&nbsp;<span style='color:#666;cursor:ns-resize;background-color:#ddd;border-radius:4px;font-size:10px;padding-bottom:2px;vertical-align:1px;border:1px solid #999'>&nbsp;&uarr;&darr;&nbsp;</span>";
				str+="&nbsp;&nbsp;<img id='idd"+i+"' style='vertical-align:middle;cursor:pointer' src='images/trashdot.gif' onclick='onDeleteOption(this.id)'</dt>"
				}
			}		
		str+="<dt><button"+butsty+"onclick='onAddOption()';>Add new option</button></td><td><dt>";	// Add button
		str+="</dl></td></tr>";															// End options table
		str+="<tr><td colspan=2><hr></td></tr>";
		str+="</table></div><br>";														// End step table
		str+="<button"+butsty+"style='color:#990000' onclick='onDeletePage()'>Delete this step</button></td><td>";			// Delete step button
		$("#pageDiv").html(str);	
		$("#optionsTable").sortable();
	
		$("#optionType").on("change", function() { o.optionType=$(this).val();});// Extract value	
		$("#title").on("change", function() { o.title=$(this).val(); });		// Extract value	
		$("#text").on("change", function() { o.text=$(this).val(); });			// Extract value	
		$("#prompt").on("change", function() { o.prompt=$(this).val(); });		// Extract value	
		$("#pic").on("change",function() { o.pic=$(this).val(); });				// Extract value	
		$("#whyRight").on("change", function() { o.whyRight=$(this).val(); });	// Extract value	
		$("#whyWrong").on("change", function() { o.whyWrong=$(this).val(); });	// Extract value	
		$("#whyPartial").on("change", function() { o.whyPartial=$(this).val()});// Extract value	
		$("#numTries").on("change", function() { o.numTries=$(this).val(); });	// Extract value	
		$("#optionsTable").on("sortstop", function(e, ui) {						// If sorted
			var v=$("#optionsTable").sortable("toArray");						// Get new order
 			for (i=0;i<v.length-1;++i)											// For each option, less add but
 				o.options[i]=$("#idr"+v[i].substr(3)).val();					// Reorder array
 			});
		if (o.options)															// If options set
			for (i=0;i<o.options.length;++i)									// For each option
		 		$("#idr"+i).on("change", function() { 							// Extract value	
		 			var id=$(this)[0].id.substr(3);								// Extract id
		 			o.options[id]=$(this).val(); 								// Set it
		 			});
			
	}

	function onDeletePage() 													// ON DELETE PAGE
	{	
		curJson.assessments[curEdit].pages.splice(curPage,1);					// Remove from json
		Sound("delete");														// Delete sound
		MakeAssessTable();														// Remake table
	}

	function onDeleteOption(id) 												// ON DELETE ASSESS
	{	
		id=id.substr(3);														// Strip off prefix
		curJson.assessments[curEdit].pages[curPage].options.splice(id,1);		// Remove from json
		Sound("delete");														// Delete sound
		EditPage();																// Redraw page
	}

	function onAddOption() 														// ON DELETE ASSESS
	{	
		if (!curJson.assessments[curEdit].pages[curPage].options)				// First one
			curJson.assessments[curEdit].pages[curPage].options=[];				// Alloc array
		curJson.assessments[curEdit].pages[curPage].options.push("");			// Add new option from json
		Sound("click");															// Delete sound
		EditPage();																// Redraw page
	}


///////////// CONTENT ////////////////

	var conPtr=null

	function ContentEditPane()												// CONTENT EDITOR
	{
		curEdit=-1;																// Clear
		conPtr=curJson.slideVectors;											// Start on slides
		var h=$("#paneDiv").height()-220;										// Max height
		var str="<div style='padding:12px'><br>"								// Container div
		str+="<div style='display:inline-block;font-size:36px;color:#999'><b>Sync Content";
		str+="<span style='font-size:12px'>&nbsp;&nbsp;in the&nbsp;<span></b></div>"// Title
		str+=MakeSelect("contentType",false,["Slide pane","Information pane","Player pane"]);		// Get setting
		str+="<br><br><div style='max-height:"+h+"px;overflow-x:hidden;overflow-y:auto;background-color:#f8f8f8;padding:8px;border:1px solid #999;border-radius:8px'>";		// Scrollable container
		str+="<table id='contentTable' style='font-size:12px;width:100%;padding:0px;border-collapse:collapse;'>";	// Add table
		str+="</table></div><div style='font-size:12px'<br><br>";				// End table
		str+="<button"+butsty+"id='addConBut'>Add a new content</button>";		// Add button
		str+="&nbsp;&nbsp;<button"+butsty+"onclick='Preview()'>Preview</button>";	// Preview button
		$("#paneDiv").html(str+"</div>");										// Put editor up	
		MakeContentTable();														// Make table
	
		$("#paneDiv").on("click",function(e) {									// ON OUTSIDE CLICK
			if (e.target.id == "paneDiv") {										// If on pane
				Sound("click");													// Click
				onClickContent();												// Deselect current edit row
				MakeContentTable();												// Make table
				}
			});

		$("#contentType").on("click",function(e) {								// ON OUTSIDE CLICK
			var s=$("#contentType").val();										// Get selection
				if (s.match(/info/i)) 	conPtr=curJson.infoVectors;				// Point at info
			else if (s.match(/play/i)) 	conPtr=curJson.playerVectors;			// Point at player
			else if (s.match(/slide/i)) conPtr=curJson.slideVectors;			// Point at slides
			MakeContentTable();													// Make table
			});
		
		$("#addConBut").on("click",function() {									// ON ADD
			conPtr.push({t:curTime,c:""})										// Add to json
			curEdit=-1;															// Not editing anymore
			MakeContentTable();													// Remake table
			Sound("click");														// Click
			});
	}
	
	function MakeContentTable() 											// MAKE TABLE AND SORT BY TIME
	{	
		var i,o,n=0,pic;
		var trsty=" style='height:20px;background-color:#f8f8f8' onMouseOver='this.style.backgroundColor=\"#dee7f1\"' ";
		trsty+="onMouseOut='this.style.backgroundColor=\"#f8f8f8\"' onclick='onClickContent(this.id)'";
		if (conPtr)	{															// If any indices
			n=conPtr.length;													// Get length
			conPtr.sort(function(a,b) { return a.t-b.t });						// Sort by time
			}
		$("#contentTable").empty();												// Remove all rows
		for (i=0;i<n;++i) {														// For each index
			o=conPtr[i];														// Point at row
			str="<tr id='idx"+i+"' "+trsty+">";													// Row
			str+="<td style='color:#009900' id='idt"+i+"'>"+SecondsToTimecode(o.t)+"&nbsp;&nbsp;</td>";	// Add time
			pic="images/webthumb.jpg";											// Assume web content
			if (o.c && o.c.match(/\.png|.gif|\.jpg|\.jpeg/i)) 					// An image
				pic=o.c;														// Point at image
			str+="<td style='vertical-align:top;width:115px'><img id='idp"+i+"' style='border:1px solid #999' height='60' width='100' src='"+pic+"'></td>";	// Add thumbnail
			str+="<td style='vertical-align:top;white-space:nowrap;'>";
			str+="<div style='height:22px;display:inline-block;width:65px;color:#777'><b>Source:</b></div><span style='padding-right:60px;cursor:text' id='idc"+i+"' contenteditable=true>"+(o.c ? o.c : '')+"</span><br>";
			str+="<div style='height:18px;display:inline-block;width:65px;color:#777'><b>Prompt:</b></div><span style='padding-right:60px;cursor:text' id='idm"+i+"' contenteditable=true>"+(o.m ? o.m : '')+"</span><br>";
			
			str+="<div style='display:inline-block;width:65px;color:#777'><b>Settings:</b></div>";
			str+="<input id='idr"+i+"' type='text' style='width:70px;height:15px' class='is' value='";
			str+=(o.r) ? Math.round(o.r*100)+"% split'> ": "No split'> ";	
			if (!o.z)							pic="No zoom";
			else if (o.z.split("|")[2] < 1)		pic="Inset";
			else								pic="Zoom";							
			
			str+=MakeSelect("idz"+i,false,["No zoom","Zoom","Inset"],pic);	
			str+=MakeSelect("ida"+i,false,["No action","Play","Pause","Seek to", "Play to","Send"],o.p);	
			str+="</td><td><img style='visibility:hidden' id='idd"+i+"' src='images/trashdot.gif' onclick='onDeleteContent(this.id)'></td></tr><tr><td colspan=3><hr></td></tr>";	// Add trashcan
			$("#contentTable").append(str);										// Add row
			
			$("#idm"+i).on("blur", function() {									// ON BLUR OF PROMPT
					var i=this.id.substr(3);									// Get id
					conPtr[i].m=$("#idm"+i).text();								// Get text
					});				
			
			$("#idc"+i).on("blur", function() {									// ON BLUR OF SOURCE
					var i=this.id.substr(3);									// Get id
					conPtr[i].c=$("#idc"+i).text();								// Get text
					});				

			$("#idr"+i).on("click", function() {								// ON BLUR OF SOURCE
					var id=this.id.substr(3);									// Get id
 					var r=Math.round(conPtr[id].r*100);							// Get current val
 					if (isNaN(r))	r="";										// Not a number, use blank
 					GetTextBox("Pane ratio", "Type the ratio between the panes (0 to 100):",r,
 						function(r) {											// On entry
 							if (!isNaN(r)) {									// If a number
 								conPtr[id].r=Math.max(0,Math.min(r/100,1));		// Cap 0-1
							 	MakeContentTable();								// Show
							 	}							
 							}); 
 					});				

			$("#idz"+i).on("click", function() {								// ON BLUR OF SOURCE
					var id=this.id.substr(3);									// Get id
					
					GetTextBox("Zoom", "Type the zoom settings:",conPtr[id].z ? conPtr[id].z : "",
 						function(z) {											// On entry
							conPtr[id].z=z;										// 
						 	MakeContentTable();									// Show
							});
 					});				
			}
		}	

	function onDeleteContent(id) 												// ON DELETE CONTENT
	{	
		id=id.substr(3);														// Strip off prefix
		conPtr.splice(id,1);													// Remove from json
		$("#idx"+id).remove();													// Remove from table
		Sound("delete");														// Delete sound
	}

	function onClickContent(id) 												// ON CLICK CONTENT
	{	
		SendShivaMessage("Qmedia=pause");										// Pause
		curEdit=-1;																// No selected edit
		if (id == undefined)													// If deselecting
			return;																// Quit
		curEdit=id.substr(3);													// Strip off prefix
		for (var i=0;i<conPtr.length;++i) {										// For each index
			$("#idt"+i).css({"color":"#009900","font-weight":"normal"});		// Restore
			$("#idd"+i).css({"visibility":"hidden"});							// Restore
			}	
		curEdit=-1;																// No selected edit
		if (id == undefined)													// If deselecting
			return;																// Quit
		Sound("click");															// Click
		curEdit=id.substr(3);													// Strip off prefix
		SendShivaMessage("Qmedia=seek",""+conPtr[curEdit].t);					// Go to time
		$("#idt"+curEdit).css({"color":"#990000","font-weight":"bold"});		// Highlight	
		$("#idd"+curEdit).css({"visibility":"visible"});						// Show trashcan
	}
	

///////////// SETTINGS ////////////////


	function SettingsEditPane()											// SETTINGS EDITOR
	{
		curEdit=-1;																// Clear
		var str="<div style='padding:12px'><br>"								// Container div
		str+="<div style='font-size:36px;color:#999'><b>Settings</b></div>"		// Title
		str+="<br><br><div style='width:360px;max-height:500px;overflow-y:auto;background-color:#f8f8f8;padding:8px;border:1px solid #999;border-radius:8px'>";		// Scrollable container
		str+="<table id='settingsTable' style='font-size:11px;padding:0px;border-collapse:collapse;'>";	// Add table
		str+="<tr><td colspan=3><b>General<b></td></tr>";						// Heading
		str+="<tr><td colspan=3><hr></td></tr>";								// Rule
		str+="<tr><td width=18></td><td>Title</td><td><input class='bs' type='text' id='title' value='"+(curJson.title ? curJson.title :'')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Overall width</td><td><input class='bs' type='text' id='width' value='"+curJson.width+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>InfoMap source</td><td><input class='bs' type='text' id='infoMapSource' value='"+(curJson.infoMapSource ? curJson.infoMapSource : '')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Transcript pane label</td><td><input class='bs' type='text' id='transLab' value='"+(curJson.transLab ? curJson.transLab : '')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Information pane label</td><td><input class='bs' type='text' id='infoLab' value='"+(curJson.infoLab ? curJson.infoLab : '')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Index pane label</td><td><input class='bs' type='text' id='contentsLab' value='"+(curJson.contentsLab ? curJson.contentsLab : '' )+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Play when index clicked?</td><td>"+MakeSelect("contentsPlayOnClick",false,["true","false"],curJson.contentsPlayOnClick)+"</td></tr>";	// Get setting
		str+="<tr><td colspan=3><b><br>Player<b></td></tr>";					// Heading
		str+="<tr><td colspan=3><hr></td></tr>";								// Rule
		str+="<tr><td></td><td>Media source (Id or URL)</td><td><input class='bs' type='text' id='playerSource' value='"+(curJson.playerSource ? curJson.playerSource : '')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Start time (seconds)</td><td><input class='bs' type='text' id='playerStart' value='"+(curJson.playerStart ? curJson.playerStart : 0)+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Stop time (seconds)</td><td><input class='bs' type='text' id='playerStop' value='"+(curJson.playerStop ? curJson.playerStop : 600)+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Media aspect ratio (0-1)</td><td><input class='bs' type='text' id='playerAspect' value='"+(curJson.playerAspect ? curJson.playerAspect : '')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Initial slide/player ratio (0-1)</td><td><input class='bs' type='text' id='playerSlideRatio' value='"+(curJson.playerSlideRatio ? curJson.playerSlideRatio : '')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Initial volume (0-100)</td><td><input class='bs' type='text' id='playerVolume' value='"+(curJson.playerVolume ? curJson.playerVolume : "")+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Auto start</td><td>"+MakeSelect("playerAuto",false,["true","false"],curJson.playerAuto)+"</td></tr>";	// Get setting
		str+="<tr><td></td><td>Show native controls</td><td>"+MakeSelect("playerControls",false,["true","false"],curJson.playerControls)+"</td></tr>";	// Get setting
		str+="<tr><td></td><td>Quality</td><td>"+MakeSelect("playerQuality",false,["Default","Good","Better","Best"],curJson.playerQuality)+"</td></tr>";	// Get setting
		str+="<tr><td colspan=3><b><br>Transcript<b></td></tr>";					// Heading
		str+="<tr><td colspan=3><hr></td></tr>";								// Rule
		str+="<tr><td></td><td>Initial trans/info ratio (0-1)</td><td><input class='bs' type='text' id='transInfoRatio' value='"+(curJson.transInfoRatio ? curJson.transInfoRatio : '')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Height</td><td><input class='bs' type='text' id='transHgt' value='"+(curJson.transHgt ? curJson.transHgt : '')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Initial language</td><td><input class='bs' type='text' id='transLanguage' value='"+(curJson.transLanguage ? curJson.transLanguage : '')+"'></td></tr>";	// Get setting
		str+="<tr><td></td><td>Languages</td><td><input class='bs' type='text' id='transLangs' value='"+(curJson.transLangs ? curJson.transLangs : '')+"'></td></tr>";	// Get setting
		str+="</table></div><br>";												// End table
		str+="&nbsp;&nbsp;<button"+butsty+"id='preBut2'>Preview</button>";		// Preview button
		$("#paneDiv").html(str+"</div>");										// Put editor up	
		
		$("#title").on("change", function() { curJson.title=$(this).val(); });	// Extract value	
		$("#width").on("change", function() { curJson.width=$(this).val(); });	// Extract value	
		$("#infoMapSource").on("change", function() { curJson.infoMapSource=$(this).val(); });	// Extract value	
		$("#transLab").on("change", function() { curJson.transLab=$(this).val(); });	// Extract value	
		$("#infoLab").on("change", function() { curJson.infoLab=$(this).val(); });		// Extract value	
		$("#contentsLab").on("change", function() { curJson.contentsLab=$(this).val(); });	// Extract value	
		$("#transLab").on("change", function() { curJson.transLab=$(this).val(); });	// Extract value	
		$("#contentsPlayOnClick").on("change", function() { curJson.contentsPlayOnClick=$(this).val(); });	// Extract value	
		$("#playerSource").on("change", function() { curJson.playerSource=$(this).val(); });	// Extract value	
		$("#playerStart").on("change", function() { curJson.playerStart=$(this).val(); });	// Extract value	
		$("#playerStop").on("change", function() { curJson.playerStop=$(this).val(); });	// Extract value	
		$("#playerAspect").on("change", function() { curJson.playerAspect=$(this).val(); });	// Extract value	
		$("#playerSlideRatio").on("change", function() { curJson.playerSlideRatio=$(this).val(); });	// Extract value	
		$("#playerControls").on("change", function() { curJson.playerControls=$(this).val(); });	// Extract value	
		$("#playerAuto").on("change", function() { curJson.playerAuto=$(this).val(); });	// Extract value	
		$("#playerVolume").on("change", function() { curJson.playerVolume=$(this).val(); });	// Extract value	
		$("#playerQuality").on("change", function() { curJson.playerQuality=$(this).val(); });	// Extract value	
		$("#transInfoRatio").on("change", function() { curJson.transInfoRatio=$(this).val(); });	// Extract value	
		$("#transHgt").on("change", function() { curJson.transHgt=$(this).val(); });	// Extract value	
		$("#transLanguage").on("change", function() { curJson.transLanguage=$(this).val(); });	// Extract value	
		$("#transLangs").on("change", function() { curJson.transLangs=$(this).val(); });	// Extract value	
	
			
		$("#preBut2").on("click",function() {									// ON PREVIEW
			Sound("click");														// Click
				Preview();															// Run preview
			});
		

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EVENTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	
	function shivaEventHandler(e)											// ON SHIVA EVENT
	{
		var o=null;															
		if (e.data.match(/ShivaAct=time/))	{									// If a time
			curTime=e.data.split("|")[1]-0;										// Isolate it
			$("#curTime").text(SecondsToTimecode(curTime));						// Show time
			if (curPane == "index")			o=curJson.indexVectors;				// Point at index
			if (curPane == "transcript")	o=curJson.transVectors;				// Point at transcript
			if (curPane == "content")		o=conPtr;							// Point at player/info/slides		
	
			if (o && (curEdit != -1)) {											// Editing time
				if (!isNaN(curTime)) {											// If a valid time
					var i,d=o[curEdit].t-curTime;								// Shift amount
					o[curEdit].t=curTime;										// Set it
					$("#idt"+curEdit).text(SecondsToTimecode(curTime));			// Update text
					if (e.data.split("|")[2].match(/s/i)) {						// If shift key pressed
						for (i=curEdit-0+1;i<o.length;++i) {					// For each subsequent row
							o[i].t-=d;											// Shift
							$("#idt"+i).text(SecondsToTimecode(o[i].t));		// Update text
							}
						}
					}
				}
			}
		else if (e.data.match(/ShivaAct=trans/))	{							// If a trans click
			if (curPane == "transcript")	o=curJson.transVectors;				// Point at transcript
			if (o && (curEdit != -1)) {											// Editing time
				o[curEdit].c=e.data.split("|")[2]-0;							// Set it
				SendShivaMessage("Qmedia=seek",""+o[curEdit].t);				// Go to time
				MakeTransTable();												// Show new context
				}											
			}	
		else
			trace(e.data);
	}	

	function SendShivaMessage(cmd, msg) 									// SEND SHIVA MESSAGE 
	{
		var str=cmd+"|QmediaEditor";											// Add src and window						
		if (msg)																// If more to it
			str+="|"+msg;														// Add it
		var win=document.getElementById("playerIF").contentWindow;				// Point at iframe	
		win.postMessage(str,"*");												// Send message to show
	}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// UNDO / REDO
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	var curUndo=0;
	var curRedo=0;
	
	function Do(name)														// SAVE SHOW IN SESSION STORAGE
	{
		return;
		var str=JSON.stringify(curJson);										// Stringify
		if (name)																// If a bookmarked show
			sessionStorage["do"+name]=str;										// Save show
		else{																	// A numbered show
			sessionStorage["do"+curUndo++]=str;									// Save show and inc count
			}
	}
	
	function Undo(name)
	{
		if (name)																// If a bookmarked show
			var str=sessionStorage["do"+name];									// Load show
		else{																	// A numbered show
			var str=sessionStorage["do"+Math,max(curUndo--,0)]=str;				// Load show and dec count
			sessionStorage["do"+curUndo]=JSON.stringify(curJson);				// Save show in last slot
			}
		curJson=$.parseJSON(str);												// Objectify
		Draw(curPane);															// Show page
	}

	function Redo()
	{
		var str=sessionStorage["do"+Math,max(currentRedo++,0)]=str;				// Load show and dec count
		curJson=$.parseJSON(str);												// Objectify
		Draw(curPane);															// Show page
	}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HELPERS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	function SecondsToTimecode(secs) 										// CONVERT SECONDS TO TIMECODE
	{
		var str="",n;
		n=Math.floor(secs/3600);												// Get hours
		if (n) str+=n+":";														// Add to tc
		n=Math.floor(secs/60);													// Get mins
		if (n < 10) str+="0";													// Add leading 0
		str+=n+":";																// Add to tc
		n=Math.floor(secs%60);													// Get secs
		if (n < 10) str+="0";													// Add leading 0
		str+=n;																	// Add to tc
		return str;																// Return timecode			
	}
		
	function MakeSelect(id, multi, items, sel, extra, values)				// CREATE SELECT WIDGET
	{
		var	str="<select class='bs' id='"+id+"'";
		if (multi)
			str+="multiple='multiple' size='"+multi+"'";
		if (extra)
			str+=extra;
		str+=">";
		for (i=0;i<items.length;++i) {
			str+="<option";
			if (sel == items[i])
				str+=" selected='selected'"
			if (values && values[i])
				str+=" value='"+values[i]+"'";
			str+=">"+items[i]+"</option>";
			}	
		return str+"</select>"
	}
	
	
</script>
</body></html>