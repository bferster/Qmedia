<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8" />
	<link REL="SHORTCUT ICON" HREF="qlogo.ico">
	<title>Qmedia assessment</title>
 	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>	
	<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/themes/smoothness/jquery-ui.css" />
	<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
	<script src="jquery.ui.touch-punch.min.js"></script>

	<style type="text/css">
		body { 			font-family:Verdana,Geneva,sans-serif; font-size:xx-small}
		.rounded-corners { -moz-border-radius:8px;-webkit-border-radius:8px;-khtml-border-radius:8px;border-radius:8px;}
		tr.odd { 		background-color:#e0e0e0; }
		.ui-autocomplete { max-height: 300px; overflow-y: auto; }
	
 		.unselectable { -moz-user-select: none;     -khtml-user-select: none;
		   			 	-webkit-user-select: none;  -ms-user-select: none;   user-select: none;
		   				}
 		.mainSty { 		font-family:Verdana,Geneva,sans-serif; font-size:12px; 
						padding:0px; margin:0px;border-radius:18px;
						-moz-user-select: none;     -khtml-user-select: none;
		   			 	-webkit-user-select: none;  -ms-user-select: none;   user-select: none;
						}
		.titleSty { 	font-size:18px; font-weight:bold; text-align:center;padding-bottom:8px;
						color:#000099
						} 
		.textSty { 		padding-left:16px; padding-right:16px;
						} 
 		.promptSty { 	padding-left:40px;padding-right:40px;padding-top:4px;padding-bottom:14px;
						margin:8px;
						font-weight:bold;
						border-bottom:1px solid #ccc;
						} 
		.optionsLSty { 	text-align:left;padding-top:4px;display:inline-block;
						} 
		.optionsRSty { 	padding-top:4px;padding-left:16px;display:inline-block;
						vertical-align:top;float:center;
						} 
 		.nextbutSty {	border-radius:10px;color:#009900;
 						}
  		#sortable li {  margin-bottom:7px; padding:1px; padding-left:12px;padding-right:12px;
  						border:1px solid #999;
  						border-radius:10px;background-color:#ddd;cursor:pointer
  						}
 	
 	</style>
	<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
	  ga('create', 'UA-49268159-1', 'qmediaplayer.com');
	  ga('send', 'pageview');
	</script>
</head>
<body>

<div id="containerDiv" style="position:absolute;top:0px;left:0px;width:100%" class="mainSty">
	<div id="titleDiv" class="titleSty"></div>
	<div id="textDiv" class="textSty"></div>
	<div id="promptDiv" class="promptSty"></div>
	<div style="text-align:center" >
		<div id="optionsLDiv" class="optionsLSty"></div>
		<div id="optionsRDiv" class="optionsRSty"><br></div>
	</div>
</div>
<script>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	var aData=null;																// Holds assessment data
	var curPage=0;																// Current page of assessment
	var numTries=0;																// Number of tries at page
	var curTime;																// Current player time
		
	$(document).ready(function() {											// WHEN PAGE LOADED
		if (window.addEventListener) 											// If supported this way
			window.addEventListener("message",shivaEventHandler,false);			// Add event handler
		else																	// Use other method
			window.attachEvent("message",shivaEventHandler);					// Add handler
		SendShivaMessage("QmediaAssess=ready","");								// Send ready message
		$("body").on("keydown", function(e) {									// Handle key down
				if (e.which == 27) 												// Esc key
					Draw(aData.pages.length);									// Move on
				});
		setInterval(function(){	SendShivaMessage("QmediaAssess=time","")},500);	// Get player time						
	
		/////////////////////////////////////////////////////////////////	
		var e={}
		e.data='ShivaAct=data|{"showFeedback":"true"';
		e.data+=',"pages":[';
		e.data+='{"title":"Sort"';
		e.data+=',"numTries":3';
		e.data+=',"text":"Sort these."';
		e.data+=',\"prompt":"Drag then"';
		e.data+=',"optionType":"match","options":["first:sex","second:drugs","third:rock","fourth:roll"]}';
		e.data+="]}"
//		shivaEventHandler(e);													
		/////////////////////////////////////////////////////////////////	


		});
		
	function shivaEventHandler(e)											// ON SHIVA EVENT
	{
		var v=e.data.split("|");												// Split into parts													
		if (v[0] == "ShivaAct=data") {											// If a data 
			aData=$.parseJSON(v[1]);											// Convert to obj
			Draw(0,false);														// Draw page
			}												
		else if (v[0] == "ShivaAct=time") 										// If time
			curTime=v[1];														// Set curtime 
	}	

	function Draw(num, showRight, answer)									// DRAW NODE
	{
		var i,lab,str="",col="#000";												
		if (num >= aData.pages.length) {										// Past last page
			SendShivaMessage("QmediaAssess=done");								// Send done message
			return;																// Quit
			}
		if (curPage != num)														// If a new page
			numTries=0;															// Reset tries counter
		curPage=num;															// Set curpage
		var d=aData.pages[num];													// Point at page
		if (d.title) 	$("#titleDiv").html(d.title);							// Add title
		if (d.text) 	$("#textDiv").html(d.text);								// Text body
		if (d.prompt) 	$("#promptDiv").html(d.prompt);							// Prompt
		if ((d.options) &&  (d.optionType == "radio" || d.optionType == "checkbox")) {	// Checkbox or radio												// Add options
			for (i=0;i<d.options.length;++i) {									// For each option
				if (showRight) {												// If showing correct answers
					if (d.options[i].match(/^\*/)) 	col="#00aa00";				// If a correct one
					else							col="#aa0000";				// A wrong one
					}
				lab=d.options[i].replace(/^\*/,"");								// Remove "correct" dot
				str+="<span style='color:"+col+"'>";							// Add color span
			 	str+="&nbsp;&nbsp; <input type='"+d.optionType+"' name='opt' id='opt"+i+"' value='"+lab+"'>"+lab+"<br></span>";	// Add line
				}
			}
		if ((d.options) && (d.optionType == "cloze")) {							// Cloze
			var s=d.text;
			i=0;																// Reset counter
			$("#textDiv").html("");												// No text
			var imp="<input style='text-align:center;width:80px;border:none;border-bottom:1px solid;padding-left:4px;color:#000099' type='text' id='opt";
			while (s.match(/__+/)) 												// While a blank
				s=s.replace(/__+/,imp+(i++)+"'>");								// Replace with text box
			str="<p style='margin-left:40px;margin-right:40px'>"+s+"</p>";		// Add cloze
			}
		if ((d.options) && ((d.optionType == "sort") || (d.optionType == "match"))) {	// Sort/match
			v=[]
			for (i=0;i<d.options.length;++i)  v.push(i);						// Normal array
			v=Shuffle(v);														// Shuffle array
			str="<ol id='sortable'>";											// Header
			for (i=0;i<d.options.length;++i) 									// For each option
				str+="<li id='"+i+"'>"+d.options[v[i]].split(":")[0]+"</li>";	// Add item
			str+="</ol>";														// End tag
			}
		else if (d.optionType == "write") {										// Write option
			str+="&nbsp;&nbsp;<textarea id='opt' rows=3 placeholder='Write your answer here...' ";		// Text 
			str+="style='width:"+$("#optionsLDiv").parent().width()*.8+"px'></textarea><br></span>";	// area
			}	

		else if (d.optionType == "notes")										// Notes option
			SendShivaMessage("QmediaAssess=notes","start");						// Send start message
		else if (d.optionType == "draw")	{									// Drae option
			SendShivaMessage("QmediaAssess=draw","start|bottom|"+d.background);	// Send start message
			if (d.pic) str+="<img src='"+d.pic+"' height=75><br>";				// Add pic
			}	
		str+="<p style='text-align:center'><input id='nextBut' type='button' value='Next' class='nextbutSty'>"; 	// Add button
		str+="<input id='skipBut' type='button' value='Skip' class='nextbutSty'></p>"; 	// Add button
		$("#optionsLDiv").html(str);											// Set div
 		$("#sortable" ).sortable({ axis:"y"} );									// Make sortable, if a sort
		i=$("#optionsLDiv").height()-16;										// Height of options side
		if (d.optionType != "draw")												// Not the draw option
			if (d.pic) $("#optionsRDiv").html("<img src='"+d.pic+"' height="+i+">");// Add pic
			else	   $("#optionsRDiv").html("");								// Erase it
		
		if ((d.options) && (d.optionType == "match")) {							// Match
			str="<span style='text-align:left;font-weight:bold'>";				// Span
			for (i=0;i<d.options.length;++i)									// For each option
				str+="<p>"+d.options[i].split(":")[1]+"</p>";					// Add item
			$("#optionsRDiv").html(str+"</span>");								// Set div
			}
	
	/////////////////////////////////////////////////////////////////////////////////////////
	
		$("#nextBut").on("click",function() {									// NEXT BUTTON HANDLER
			++numTries;															// Increment tries
			if (d.optionType == "write") {										// Draw style
				ans=$("#opt").val();											// Get answer
				SendShivaMessage("QmediaAssess=answer",curPage+"|"+ans);		// Send answer message
				if (!d.numTries || ans)											// If requiring an answer
					Draw(curPage+1);											// Move on
				return;															// Quit
				}	
			else if (d.optionType == "notes") {									// Notes style
				SendShivaMessage("QmediaAssess=answer",curPage+"|personalNotes");	// Send answer message
				Draw(curPage+1);												// Move on
				return;															// Quit
				}
			else if (d.optionType == "draw") {									// Draw style
				SendShivaMessage("QmediaAssess=answer",curPage);				// Send answer message
				SendShivaMessage("QmediaAssess=draw","done");					// Send done message
				Draw(curPage+1);												// Move on
				return;															// Quit
				}	
			var i,correct=0,wrong=0,requiredCorrect=0;
			var ans="*"+$("input[name='opt']:checked").val();					// Chosen answer
			for (i=0;i<d.options.length;++i) {									// For each option
				if (d.options[i].match(/^\*/))	requiredCorrect++				// Add to required count
				if (ans == d.options[i])										// If correct
					correct++;													// Add to count
					}
			if (d.optionType == "radio")	ans=correct ? "right" : "wrong"		// Radio
			else if (d.optionType == "cloze") {									// Cloze
				for (i=0;i<d.options.length;++i) {								// For each option
					v=d.options[i].split(";");									// Get parts
					ans=$("#opt"+i).val();										// Get answer
					for (var j=0;j<v.length;++j) 								// For each possibility
						if (ans.toLowerCase() == v[j].toLowerCase()) {			// If a match		
							correct++;											// Add to corrects
							break;												// Stop looking
							}
					if (j == v.length)											// Didn't find it
						wrong++;												// Add to wrongs
					}
				ans="wrong";													// Assume wrong
				if (correct == i)				ans="right";					// Correct				
				if (correct && correct < i)		ans="partial"					// Partial
				}
			else if ((d.optionType == "sort") || (d.optionType == "match")) {	// Sort/Match
				for (i=0;i<d.options.length;++i) 								// For each option
				 	if ($("#sortable :eq("+i+")").text() == d.options[i].split(":")[0])	// A match
						++correct;												// Inc right answer
				ans="wrong";													// Assume wrong
				if (correct == i)				ans="right";					// Correct				
				if (correct && correct < i)		ans="partial"					// Partial
				}
			else if (d.optionType == "findtime") {									// Find time
				var s,e;
				ans="wrong";													// Assume wrong
				for (i=0;i<d.options.length;++i) {								// For each option
					s=d.options[i].split("-")[0];								// Start
					e=d.options[i].split("-")[1];								// End
					if (!e)	e=s;												// No end
					if ((curTime >=s) && (curTime <=e))							// In span
						ans="right";											// Right
					}
				}
			else{
				correct=0;														// Restart
				for (i=0;i<d.options.length;++i) {								// For each option
					if ($("#opt"+i).prop("checked"))							// If checked
						if (d.options[i].match(/^\*/)) 	correct++;				// Add to right count
						else							wrong++;				// Add to wrong count
					}
				ans="wrong";													// Assume wrong
				if (correct == requiredCorrect  && !wrong) 		ans="right";	// All correct
				else if (correct < requiredCorrect && !wrong && correct) ans="partial"	// If partial
				}
			if (aData.showFeedback != "false") {								// If showing feedback
				str="<div style='margin-left:16px;margin-right:16px'><div style='font-size:18px;text-align:center;font-weight:bold;color:#";	// Title
				if (ans == "right") {											// Right
					str+="009900'>That's right!</div><p>";						// Heading
					if (d.whyRight)	str+=d.whyRight;							// Show explanation
					}				
				else if (ans == "partial") { 									// Partial
					str+="ff9900'>Sorry, you only got some right..</div><p>";	// Heading		
					if (d.whyPartial)		str+=d.whyPartial;					// Show partial explanation
					else if (d.whyWrong)	str+=d.whyWrong;					// Show wrong explanation
				 	if (numTries < d.numTries)									// If more tries ahead
				 		str+="<div style='text-align:center'><b>Please try again</b> ("+numTries+"/"+d.numTries+")</div>";	// Show progress
					}
				else{															// Wrong
					str+="990000'>Sorry, that's not the right answer</div><p>";	// Heading	
					if (d.whyWrong)	str+=d.whyWrong;							// Show wrong explanation
				 	if (numTries < d.numTries)									// If more tries ahead
				 		str+="<div style='text-align:center'><b>Please try again</b> ("+numTries+"/"+d.numTries+")</div>";	// Show progress
					}
				SendShivaMessage("QmediaAssess=answer",curPage+"|"+ans);		// Send answer message
				str+="</p><div style='text-align:center'>";						// Center
				str+="<input id='contBut' type='button' value='Continue' class='nextbutSty'></div></div>"; 	// Add button
				$("#optionsLDiv").html(str);									// Set div
				$("#optionsRDiv").html("");										// Set div

				$("#contBut").on("click",function() {							// CONTINUE BUTTON HANDLER
					if (ans == "right")											// Ig right		
						Draw(curPage+1);										// Show next
					else{
						if (numTries < d.numTries)	Draw(curPage);				// Reshow
						else 						Draw(curPage+1);			// Move on
						}
					});
			}																	// End feedback
			});																	// End nextbut
			
		$("#skipBut").on("click",function() {									// SKIP BUTTON HANDLER
			if (d.optionType == "draw") 										// Draw style
				SendShivaMessage("QmediaAssess=draw","done");					// Send done message
			else if (d.optionType == "notes") 									// Notes style
				SendShivaMessage("QmediaAssess=notes","done");					// Send done message
			SendShivaMessage("QmediaAssess=answer",curPage+"|skip");			// Send answer message
			Draw(curPage+1);													// Move on
			});
		
	}
	
	
	function SendShivaMessage(cmd, msg) 									// SEND SHIVA MESSAGE 
	{
		var id=window.name;														// Get from name
		if (!id) 																// Firefox/IE issue
			id="posterFrame-"+(""+window.location.search.match(/&if=[0-9A-z]+/)).substr(4);	// Extract id
		var str=cmd+"|"+id;														// Add src and window						
		if (msg)																// If more to it
			str+="|"+msg;														// Add it
		if (window.parent)														// If has a parent
			window.parent.postMessage(str,"*");									// Send message to parent wind
		else																	// Local	
			window.postMessage(str,"*");										// Send message to wind
	}
	
	
	function Shuffle(array) {												// FISHER-YATES SHUFFLE
    for (var i = array.length - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1));
        var temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
    return array;
}
	
	function trace(msg, p1, p2, p3, p4)										// CONSOLE 
	{
		if (p4 != undefined)
			console.log(msg,p1,p2,p3,p4);
		else if (p3 != undefined)
			console.log(msg,p1,p2,p3);
		else if (p2 != undefined)
			console.log(msg,p1,p2);
		else if (p1 != undefined)
			console.log(msg,p1);
		else
			console.log(msg);
	}
	
	
</script>
</body></html>